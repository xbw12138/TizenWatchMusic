{"version":3,"sources":["../srcWeb/common/js/config.js","../srcWeb/api/index.js","../srcWeb/common/js/utl.js","../srcWeb/base/Message/message.js","../srcWeb/base/Message/container.js","../srcWeb/base/Message/index.js","../srcWeb/store/actionCreator.js","../srcWeb/store/actionTypes.js","../srcWeb/base/Loading/index.js","../srcWeb/pages/Recommend/index.js","../srcWeb/api/search.js","../srcWeb/base/RenderSingers/index.js","../srcWeb/base/ShowList/index.js","../srcWeb/pages/Search/index.js","../srcWeb/base/Dialog/index.js","../srcWeb/pages/Collect/index.js","../srcWeb/pages/Rank/index.js","../srcWeb/pages/About/index.js","../srcWeb/components/Header/index.js","../srcWeb/base/ProgressBar/index.js","../srcWeb/base/PlayTime/index.js","../srcWeb/base/PlayList/index.js","../srcWeb/base/MusicDetail/index.js","../srcWeb/components/Player/index.js","../srcWeb/components/MusicList/index.js","../srcWeb/components/SingerInfo/index.js","../srcWeb/renderer/components/MyTitle/index.js","../srcWeb/App.js","../srcWeb/store/reducer.js","../srcWeb/store/index.js","../srcWeb/index.jsx","../srcWeb/data/index.js"],"names":["HOST","PLAY_MODE_TYPES","SEQUENCE_PLAY","RANDOM_PLAY","LOOP_PLAY","getSingerAlbums","id","url","concat","axios","get","formatDate","obj","opt","arguments","length","undefined","y","m","d","t","Date","getFullYear","getMonth","substring","getDate","res","push","join","findIndex","allList","list","item","formatPlayCount","count","Math","floor","imageRatio","width","height","window","devicePixelRatio","Message","_this","this","duration","props","setTimeout","removeMessage","react_default","a","createElement","className","content","Component","defaultProps","Container","Object","classCallCheck","_super","call","addMessage","setState","message","state","react","message_Message","div","document","body","appendChild","setAttribute","type","base_Message","info","ReactDom","render","container_Container","getChangeCollectorAction","value","getChangeCurrentMusicListAction","getMusicListDetailAction","dispatch","getChangeShowLoadingAction","getMusicListDetail","then","_ref","data","playlist","tracks","map","singers","ar","name","musicName","imgUrl","al","picUrl","album","catch","changeCurrentMusicAction","changeSingerInfoAction","getSingerInfoAction","singerId","getSingerInfo","getAlbumInfoAction","albumId","getAlbumInfo","_ref2","_ref2$data","songs","description","coverImgUrl","formatAlbumTracks","company","publishTime","artist","getChangePlayListAction","getChangeCurrentIndex","index","getChangePlayingStatusAction","status","changeCurrentMusicLyric","getCurrentMusicLyric","getState","JSON","parse","stringify","currentMusic","getMusicLyric","_ref3","getChangeCurrentMusic","loadCacheMusic","playList","currentIndex","getMusicUrl","_ref4","playNextMusicAction","musicUrl","getMusicDetail","_ref5","playMode","random","getAddToLikeListAction","collector","$db","find","err","foundList","unshift","splice","update","getToggleCollectPlaylist","collectList","Loading","Recommend","handleGetRecommendList","updateTime","getRecommendList","playlists","gotRecommend","showLoding","prevState","recommendList","handleUserScroll","refs","scrollHeight","scrollTop","clientHeight","renderRecommendList","key","onClick","handleGetMusicListDetail","src","alt","playCount","showMusicList","showSingerInfo","onScroll","ref","Loading_Loading","withRouter","connect","handleChangeCurrentMusicList","action","handleChangeShowLoadingAction","getSearchResult","searchName","RenderSingers","renderSingers","handleGetSingerInfo","Array","isArray","ShowList","renderMusicList","handleChangeCurrentMusic","base_RenderSingers","handleGetAlbumInfo","ReactIf","condition","likesList","handleAddToLikeList","title","showTitle","SEARCH_TYPES","SONGS","ALBUMS","SINGERS","PLAYLIST","KEYBOARY_ENTER_CODE","Search","changeCurrentSearchType","searchType","searchVal","handleGetType","toggleShowLoading","prevProps","showLoading","handleGetSongs","result","r","artists","handleGetAlbums","albums","handleGetSingers","handleGetPlaylist","handleKeydown","e","keyCode","handleClickHotSearch","val","renderHotSearch","hotSearch","first","renderResult","renderResultSongs","renderResultAlbums","renderResultSingers","renderResultPlayList","base_ShowList","img1v1Url","trackCount","_this2","getHotSearch","hots","_this3","_this4","autoFocus","placeholder","onChange","target","onKeyDown","Dialog","text","handleClickBtn","trueBtnText","falseBtnText","COLLECT","FOUND","Collect","handleChangeCurrentList","currentList","listType","handleDelCollectPlaylist","showDialog","willDelList","handleClickDialog","bol","handleToggleCollectPlaylist","renderCollectList","renderFoundList","renderFoundListImg","i","renderCurrentList","changeMusicList","showLikeBtn","showDislikeBtn","activeList","Dialog_Dialog","Rank","renderList","rankList","updateFrequency","getAllRank","handleOpenExternalUrl","open","renderAbout","handleChangeCollector","Header","isActive","pathname","location","NavLink","exact","activeClassName","to","handleHideMusicListAndSingerInfo","ProgressBar","handleWindowResize","controlBarOffestLeft","offset","controlBar","progressMouseDown","addEventListener","progressMouseMove","progressMouseUp","percent","clientX","clientWidth","percentChange","removeEventListener","percentChangeEnd","clickToChangePercent","mouseDown","style","onMouseDown","direction","offsetDir","toUpperCase","realNum","positionParent","offsetParent","PlayTime","interval","isNaN","minute","second","format","currentTime","PlayList","scrollToCurrentMusic","playListUl","renderPlayList","onDoubleClick","handleDeleteMusic","alert","nativeEvent","stopImmediatePropagation","emptyPlayList","getDeleteMusicAction","forwardRef","MusicDetail","displayMusicDetailGetMusicTime","time","musicTime","lyric","seek","togglePlay","startTime","renderLyric","lines","currentLineNum","txt","handleLyric","lineNum","noLyric","parentDom","querySelector","childNodes","offsetTop","nextProps","currentMusicLyric","stop","Lyric","lrc","play","_this$props","showMusicDetail","handletoggleShowMusicDetail","DEFAULT_TIME","PLAYING_STATUS","playing","paused","Player","handleGlobalShortcut","handleChangePlayingStatus","playPrevMusic","playNextMusic","handleShortcut","tagName","preventDefault","metaKey","handleHideAll","history","handleUpdateTime","move","_e$target","musicDetail","audio","handleShowPlayList","showPlayList","pervState","handleShowMusicDetial","toggleShowMusicDetail","handlePlayNextMusic","renderPlayerControl","pause","changePlayingStatus","base_ProgressBar","base_PlayTime","changePlayMode","Boolean","base_MusicDetail","base_PlayList","autoPlay","onTimeUpdate","onEnded","getChangePlayModeAction","MusicList","handleCollectList","musicList","tags","scrollToTop","collectedPlaylist","renderListInfo","SingerInfo","singerInfo","gotSingerAlbums","renderAlbums","hotAlbums","hotSongs","hideSingerInfo","trans","alias","briefDesc","MyTitle","App","redirect","insert","cacheValue","volume","handleLoadCache","HashRouter","components_Header","components_MusicList","components_Player","components_SingerInfo","Route","path","component","About","Redirect","components_MyTitle","cache","defaultState","deepCopy","cacheLastUseInfo","needUpdate","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","newState","newCollector","getNewCollector","applyMiddleware","thunk","ReactDOM","es","srcWeb_App_0","getElementById","__dirname","nedb__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","nedb__WEBPACK_IMPORTED_MODULE_0___default","n","path__WEBPACK_IMPORTED_MODULE_1__","path__WEBPACK_IMPORTED_MODULE_1___default","__webpack_exports__","Datastore","filename","autoload"],"mappings":"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","file":"static/js/main.1a0c3aa1.chunk.js","sourcesContent":["export const HOST = 'http://ecfun.cc:3000';\n\nexport const PLAY_MODE_TYPES = {\n  SEQUENCE_PLAY: 0,\n  RANDOM_PLAY: 1,\n  LOOP_PLAY: 2\n};\n","import axios from 'axios';\nimport { HOST } from '../common/js/config';\n\n// 获取推荐歌单\nexport function getRecommendList (updateTime = null) {\n  let url = '';\n  if (updateTime) {\n    url = HOST + `/top/playlist/highquality?before=${updateTime}&limit=30`;\n  } else {\n    url = HOST + '/top/playlist/highquality?limit=30';\n  }\n  return axios.get(url);\n}\n\n// 获取歌单详情\nexport function getMusicListDetail (id) {\n  const url = HOST + `/playlist/detail?id=${id}`;\n  return axios.get(url);\n}\n\n// 获取音乐播放地址\nexport function getMusicUrl (id) {\n  const url = HOST + `/song/url?id=${id}`;\n  return axios.get(url);\n}\n\n// 获取音乐详情（歌曲没有图片的时候要用）\nexport function getMusicDetail (id) {\n  const url = HOST + `/song/detail?ids=${id}`;\n  return axios.get(url);\n}\n\n// 获取歌曲歌词\nexport function getMusicLyric (id) {\n  const url = HOST + `/lyric?id=${id}`;\n  return axios.get(url);\n}\n\n// 获取歌手单曲\n// https://binaryify.github.io/NeteaseCloudMusicApi/#/?id=%E8%8E%B7%E5%8F%96%E6%AD%8C%E6%89%8B%E5%8D%95%E6%9B%B2\nexport function getSingerInfo (id) {\n  const url = HOST + `/artists?id=${id}`;\n  return axios.get(url);\n}\n\n// 获取歌手专辑\n// https://binaryify.github.io/NeteaseCloudMusicApi/#/?id=%E8%8E%B7%E5%8F%96%E6%AD%8C%E6%89%8B%E4%B8%93%E8%BE%91\nexport function getSingerAlbums (id) {\n  const url = HOST + `/artist/album?id=${id}`;\n  return axios.get(url);\n}\n\n// 获取专辑详情\n// https://binaryify.github.io/NeteaseCloudMusicApi/#/?id=%E8%8E%B7%E5%8F%96%E4%B8%93%E8%BE%91%E5%86%85%E5%AE%B9\nexport function getAlbumInfo (id) {\n  const url = HOST + `/album?id=${id}`;\n  return axios.get(url);\n}\n\n/**\n * 获取排行榜所有榜单\n * https://binaryify.github.io/NeteaseCloudMusicApi/#/?id=%E6%89%80%E6%9C%89%E6%A6%9C%E5%8D%95\n */\nexport function getAllRank () {\n  const url = HOST + '/toplist';\n  return axios.get(url);\n}\n","export const formatDate = (\n  obj,\n  opt = {\n    y: true,\n    m: true,\n    d: true\n  }\n) => {\n  const t = new Date(obj);\n  const y = t.getFullYear();\n  let m = '0' + (t.getMonth() + 1);\n  m = m.substring(m.length - 2, m.length);\n  let d = '0' + t.getDate();\n  d = d.substring(d.length - 2, d.length);\n\n  const res = [];\n  if (opt.y) { res.push(y); }\n  if (opt.m) { res.push(m); }\n  if (opt.d) { res.push(d); }\n\n  return res.join('-');\n};\n\n// 截流函数\nexport function debounce (func, delay) {\n  let timer;\n\n  return function (...args) {\n    if (timer) {\n      clearTimeout(timer);\n    }\n    timer = setTimeout(() => {\n      func.apply(this, args);\n    }, delay);\n  };\n}\n\nexport function findIndex (allList, list) {\n  return allList.findIndex((item) => {\n    return item.id === list.id;\n  });\n}\n\nexport function formatPlayCount (count) {\n  if (!count) {\n    return 0;\n  }\n  if (count < 1e5) {\n    return Math.floor(count);\n  } else {\n    return Math.floor(count / 10000) + '万';\n  }\n}\n\nexport function imageRatio (width = 0, height = width) {\n  return `?param=${window.devicePixelRatio * width}x${window.devicePixelRatio * height}`;\n}\n","import React, { Component } from 'react';\nimport './style.scss';\n\nexport default class Message extends Component {\n  componentDidMount () {\n    const { duration } = this.props;\n    setTimeout(() => {\n      this.props.removeMessage();\n    }, duration);\n  }\n\n  render () {\n    return (\n      <div className=\"hint-message\">\n        {this.props.content}\n      </div>\n    );\n  }\n}\n\nMessage.defaultProps = {\n  duration: 1500\n};\n\n","import React, { Component, Fragment } from 'react';\nimport Message from './message';\n\nexport default class Container extends Component {\n  constructor (props) {\n    super(props);\n\n    this.state = {\n      message: null\n    };\n  }\n\n  addMessage = (content) => {\n    this.setState(() => ({\n      message: content\n    }));\n  };\n\n  removeMessage = () => {\n\n    this.setState(() => ({\n      message: null\n    }));\n  };\n\n  render () {\n    return (\n      <Fragment>\n        {this.state.message ? (\n          <Message\n            content={this.state.message}\n            removeMessage={this.removeMessage}\n          />\n        ) : null}\n      </Fragment>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDom from 'react-dom';\nimport Container from './container';\n\nconst div = document.createElement('div');\ndocument.body.appendChild(div);\ndiv.setAttribute('class', 'message-container');\n\nfunction create (type) {\n  return (content) => {\n    if (type === 'info') {\n      ReactDom.render(<Container />, div).addMessage(content);\n    }\n  };\n}\n\nexport default {\n  info: create('info')\n};\n","import * as types from './actionTypes';\nimport { getMusicUrl, getMusicLyric, getSingerInfo, getAlbumInfo, getMusicDetail, getMusicListDetail } from '../api';\nimport $db from '../data';\nimport { findIndex } from '../common/js/utl';\nimport message from '../base/Message';\n\nimport { PLAY_MODE_TYPES } from '../common/js/config';\n\nexport const getChangeCollectorAction = (value) => ({\n  type: types.CHANGE_COLLECTOR,\n  value\n});\n\nexport const getRefreshCollectorAction = (value) => ({\n  type: types.REFRESH_COLLECTOR,\n});\n\nexport const getChangeCurrentMusicListAction = (value) => ({\n  type: types.CHANGE_CURRENT_MUSIC_LIST,\n  value\n});\n\n/**\n * 获取歌单详情，并显示歌单\n * @param {number} id\n */\nexport const getMusicListDetailAction = (id) => {\n  return (dispatch) => {\n    dispatch(getChangeShowLoadingAction(true));\n    getMusicListDetail(id).then(({ data }) => {\n      // 将歌单传入 redux 中的 musicList\n      data.playlist.tracks = formatMusicListTracks(data.playlist.tracks);\n      dispatch(getChangeCurrentMusicListAction(data.playlist));\n      dispatch(getChangeShowLoadingAction(false));\n    }).catch(() => {\n      dispatch(getChangeShowLoadingAction(false));\n    });\n  };\n};\n\n/**\n * 控制 Loading 的显示\n * @param {Boolean} value\n */\nexport const getChangeShowLoadingAction = (value) => ({\n  type: types.CHANGE_SHOW_LOADING,\n  value\n});\n\n/**\n * 隐藏 *歌曲列表*\n */\nexport const getHideMusicListAction = () => ({\n  type: types.HIDE_MUSIC_LIST\n});\n\n/**\n * 隐藏 *歌手详情*\n */\nexport const getHideSingerInfoAction = () => ({\n  type: types.HIDE_SINGER_INFO\n});\n\n/**\n * 隐藏 *歌手详情* *歌曲列表* *歌曲详情*\n */\nexport const getHideAllAction = () => ({\n  type: types.HIDE_ALL\n});\n\n/**\n * 开关：显示 / 隐藏 *歌曲详情*\n */\nexport const toggleShowMusicDetail = () => ({\n  type: types.TOGGLE_SHOW_MUSIC_DETAIL\n});\n\n/**\n * 改变当前播放歌曲信息\n * @param {Object} value\n */\nexport const changeCurrentMusicAction = (value) => ({\n  type: types.CHANGE_CURRENT_MUSIC,\n  value\n});\n\n/**\n * 改变歌手信息\n * @param {Object} value\n */\nexport const changeSingerInfoAction = (value) => ({\n  type: types.CHANGE_SINGER_INFO,\n  value\n});\n\n/**\n * 获取歌手信息\n */\nexport const getSingerInfoAction = (singerId) => {\n  return (dispatch) => {\n    dispatch(getChangeShowLoadingAction(true));\n    dispatch(changeSingerInfoAction(null));\n    getSingerInfo(singerId).then((res) => {\n      dispatch(changeSingerInfoAction(res.data));\n      dispatch(getChangeShowLoadingAction(false));\n    }).catch(() => {\n      dispatch(getChangeShowLoadingAction(false));\n      message.info('暂时不能查询到此歌手');\n      dispatch(getHideSingerInfoAction());\n    });\n  };\n};\n\n/**\n * 获取专辑内容\n */\nexport const getAlbumInfoAction = (albumId) => {\n  return (dispatch) => {\n    dispatch(getChangeShowLoadingAction(true));\n    getAlbumInfo(albumId).then(({ data: {album, songs} }) => {\n      const list = {\n        name: album.name,\n        id: album.id,\n        description: album.description ? album.description : '',\n        coverImgUrl: album.picUrl,\n        tracks: formatAlbumTracks(songs),\n        company: album.company,\n        publishTime: album.publishTime,\n        artist: album.artist,\n        type: album.type\n      };\n      dispatch(getChangeShowLoadingAction(false));\n      dispatch(getChangeCurrentMusicListAction(list));\n\n      // 隐藏歌手详情，歌手详情遮挡住专辑内容\n      dispatch(getHideSingerInfoAction());\n    }).catch(() => {\n      dispatch(getChangeShowLoadingAction(false));\n    });\n  };\n};\n\n/**\n * 改变当前播放列表\n */\nexport const getChangePlayListAction = (value) => ({\n  type: types.CHANGE_PLAY_LIST,\n  value\n});\n\n/**\n * 清空播放列表\n */\nexport const emptyPlayList = () => {\n  return (dispatch) => {\n    const EMPTY_PLAY_LIST = [];\n    const STOP = false;\n    dispatch(getChangePlayListAction(EMPTY_PLAY_LIST));\n    dispatch(getChangePlayingStatusAction(STOP));\n  };\n};\n\n/**\n * 改变当前播放索引 currentIndex\n */\nexport const getChangeCurrentIndex = (index) => ({\n  type: types.CHANGE_CURRENT_INDEX,\n  index\n});\n\n/**\n * 改变音量\n */\nexport const getChangeVolumeAction = (value) => ({\n  type: types.CHANGE_VOLUME,\n  value\n});\n\n/**\n * 改变音乐播放状态\n * @param {Boolean} status\n */\nexport const getChangePlayingStatusAction = (status) => ({\n  type: types.CHANGE_PLAYING_STATUS,\n  status\n});\n\n/**\n * 改变音乐播放模式\n */\nexport const getChangePlayModeAction = (value) => ({\n  type: types.CHANGE_PLAY_MODE,\n  value\n});\n\nexport const changeCurrentMusicLyric = (value) => ({\n  type: types.CHANGE_CURRENT_MUSIC_LYRIC,\n  value\n});\n\nfunction getCurrentMusicLyric () {\n  return (dispatch, getState) => {\n    const state = JSON.parse(JSON.stringify(getState()));\n    const currentMusic = state.currentMusic;\n    const id = currentMusic.id;\n    // 清空之前的歌词\n    dispatch(changeCurrentMusicLyric(null));\n\n    // 获取新的歌词\n    getMusicLyric(id).then(({ data }) => {\n      dispatch(changeCurrentMusicLyric(data));\n    });\n  };\n}\n\n/**\n * **点击歌曲播放逻辑：**\n * 1. 点击歌曲的时候使用 getChangeCurrentMusic\n * 2. 使用 redux-thunk 中间件，在 actoin 中发出获取歌曲 url 的请求\n * 3. 获取 url 之后在 action 中直接调用 actionCreator 中的 changeCurrentMusicAction\n *    来对 redux 中的 currentMusic 进行修改\n */\nexport const getChangeCurrentMusic = (value, loadCacheMusic = false) => {\n  return (dispatch, getState) => {\n    const state = getState();\n    const list = state.playList;\n    // 从歌曲列表中寻找当前歌曲的 index\n    const index = findIndex(list, value);\n    // 当点击的歌曲是正在播放的歌曲，直接返回\n    if (index === state.currentIndex && !loadCacheMusic) {\n      return;\n    }\n    if (index >= 0) {\n      // 如果 index >= 0 就直接修改 currentIndex\n      dispatch(getChangeCurrentIndex(index));\n    } else {\n      // 如果没有这首歌\n      // 1. push 这首歌到 playList 中\n      // 2. 改变 index\n      list.push(value);\n      dispatch(getChangePlayListAction(list));\n      dispatch(getChangeCurrentIndex(list.length - 1));\n    }\n    dispatch(changeCurrentMusicAction(value));\n    dispatch(getCurrentMusicLyric());\n    getMusicUrl(value.id).then(({ data: { data } }) => {\n      if (!data[0].url) {\n        message.info('歌曲暂无版权，我帮你换首歌吧');\n        if (index !== list.length - 1) {\n          dispatch(playNextMusicAction());\n        }\n        return;\n      }\n      value.musicUrl = data[0].url;\n      dispatch(changeCurrentMusicAction(value));\n\n      // 因为是打开程序的时候加载上次关闭的时候播放的歌，但是不能播放，所以需要暂停\n      if (loadCacheMusic) {\n        const STOP = false;\n        dispatch(getChangePlayingStatusAction(STOP));\n      }\n\n      // 搜索的歌曲会没有图片，所以去歌曲详情弄一张图片回来\n      if (!value.imgUrl) {\n        getMusicDetail(value.id).then(({data}) => {\n          value.imgUrl = data.songs[0].al.picUrl;\n          dispatch(changeCurrentMusicAction(value));\n        });\n      }\n    });\n  };\n};\n\nexport const playPrevMusicAction = () => {\n  return (dispatch, getState) => {\n    const state = getState();\n    let { currentIndex } = state;\n    const { playList } = state;\n    const length = playList.length;\n    if (length === 0 || length === 1) {\n      return;\n    }\n    if (state.playMode === PLAY_MODE_TYPES.RANDOM_PLAY) {\n      // 返回值不能等于原来的 index\n      currentIndex = random(currentIndex, length);\n    } else if (currentIndex > 0) {\n      currentIndex--;\n    } else {\n      currentIndex = length - 1;\n    }\n    dispatch(getChangeCurrentMusic(playList[currentIndex]));\n    dispatch(getChangeCurrentIndex(currentIndex));\n  };\n};\n\nexport const playNextMusicAction = () => {\n  return (dispatch, getState) => {\n    const state = getState();\n    let { currentIndex } = state;\n    const { playList } = state;\n    const length = playList.length;\n    if (length === 0 || length === 1) {\n      return;\n    }\n    if (state.playMode === PLAY_MODE_TYPES.RANDOM_PLAY) {\n      currentIndex = random(currentIndex, length);\n    } else if (currentIndex < length - 1) {\n      currentIndex++;\n    } else {\n      currentIndex = 0;\n    }\n    dispatch(getChangeCurrentMusic(playList[currentIndex]));\n    dispatch(getChangeCurrentIndex(currentIndex));\n  };\n};\n\nexport const getDeleteMusicAction = (item) => {\n  return (dispatch, getState) => {\n    const state = getState();\n    let { currentIndex } = JSON.parse(JSON.stringify(state));\n    const { playList } = JSON.parse(JSON.stringify(state));\n    const index = findIndex(playList, item);\n    playList.splice(index, 1);\n    if (index < currentIndex) {\n      currentIndex--;\n      dispatch(getChangeCurrentIndex(currentIndex));\n    } else if (index === currentIndex) {\n      // 先播放下一首\n      dispatch(playNextMusicAction());\n      // 然后将 currentIndex 修改回来\n      dispatch(getChangeCurrentIndex(currentIndex));\n    }\n    // 当 playList 已经没有的时候，删除掉当前音乐的 url\n    // 音乐就会暂停播放\n    if (playList.length === 0) {\n      const { currentMusic } = JSON.parse(JSON.stringify(state));\n      currentMusic.musicUrl = '';\n      dispatch(changeCurrentMusicAction(currentMusic));\n    }\n    dispatch(getChangePlayListAction(playList));\n  };\n};\n\n/**\n * 实现喜欢歌曲的功能\n */\nexport const getAddToLikeListAction = (value) => {\n  return (dispatch, getState) => {\n    let collector = null;\n    $db.find({name: 'collector'}, (err, res) => {\n      collector = res[0];\n      const index = findIndex(collector.foundList[0].tracks, value);\n      if (index < 0) {\n        collector.foundList[0].tracks.unshift(value);\n        message.info('已经加入到喜欢的歌曲中');\n      } else {\n        collector.foundList[0].tracks.splice(index, 1);\n      }\n      $db.update({ name: 'collector' }, collector, () => {\n        dispatch(getChangeCollectorAction(collector));\n      });\n    });\n  };\n};\n\n/**\n * 收藏 / 取消收藏 歌单\n */\nexport const getToggleCollectPlaylist = (list) => {\n  return (dispatch) => {\n    $db.find({ name: 'collector' }, (err, res) => {\n      const collector = res[0];\n      const index = findIndex(collector.collectList, list);\n      if (index < 0) {\n        collector.collectList.push(list);\n        dispatch(getChangeCollectorAction(collector));\n        $db.update({ name: 'collector' }, collector, () => {\n          message.info('收藏歌单成功');\n        });\n      } else {\n        collector.collectList.splice(index, 1);\n        dispatch(getChangeCollectorAction(collector));\n        $db.update({ name: 'collector' }, collector);\n      }\n    });\n  };\n};\n\n/**\n * 加载缓存信息\n */\nexport const getLoadCacheAction = (cache) => {\n  return (dispatch) => {\n    dispatch(getChangePlayListAction(cache.playList));\n    dispatch(getChangeVolumeAction(cache.volume));\n    dispatch(getChangeCurrentIndex(cache.currentIndex));\n    if (cache.currentIndex !== -1 && cache.playList.length !== 0) {\n      dispatch(getChangeCurrentMusic(cache.playList[cache.currentIndex], true));\n    }\n  };\n};\n\nfunction random (index, length) {\n  const res = Math.floor(Math.random() * length);\n  if (res === index) {\n    return random(index, length);\n  }\n  return res;\n}\n\nfunction formatAlbumTracks (list) {\n  return list.map((item) => {\n    const singers = item.ar.map((item) => {\n      return {\n        id: item.id,\n        name: item.name\n      };\n    });\n    return {\n      id: item.id,\n      musicName: item.name,\n      imgUrl: item.al.picUrl,\n      singers,\n      album: {\n        id: item.al.id,\n        name: item.al.name\n      }\n    };\n  });\n}\n\nfunction formatMusicListTracks (list) {\n  return list.map((item) => {\n    const singers = item.ar.map((item) => {\n      return {\n        id: item.id,\n        name: item.name\n      };\n    });\n    return {\n      id: item.id,\n      musicName: item.name,\n      imgUrl: item.al.picUrl,\n      singers,\n      album: {\n        id: item.al.id,\n        name: item.al.name\n      }\n    };\n  });\n}\n","export const CHANGE_CURRENT_MUSIC_LIST = 'CHANGE_CURRENT_MUSIC_LIST';\n\nexport const HIDE_MUSIC_LIST = 'HIDE_MUSIC_LIST';\n\nexport const CHANGE_CURRENT_MUSIC = 'CHANGE_CURRENT_MUSIC';\n\nexport const CHANGE_PLAYING_STATUS = 'CHANGE_PLAYING_STATUS';\n\nexport const CHANGE_PLAY_LIST = 'CHANGE_PLAY_LIST';\n\nexport const CHANGE_CURRENT_INDEX = 'CHANGE_CURRENT_INDEX';\n\nexport const CHANGE_PLAY_MODE = 'CHANGE_PLAY_MODE';\n\nexport const TOGGLE_SHOW_MUSIC_DETAIL = 'TOGGLE_SHOW_MUSIC_DETAIL';\n\nexport const CHANGE_CURRENT_MUSIC_LYRIC = 'CHANGE_CURRENT_MUSIC_LYRIC';\n\nexport const CHANGE_SINGER_INFO = 'CHANGE_SINGER_INFO';\n\nexport const HIDE_SINGER_INFO = 'HIDE_SINGER_INFO';\n\nexport const CHANGE_COLLECTOR = 'CHANGE_COLLECTOR';\n\nexport const REFRESH_COLLECTOR = 'REFRESH_COLLECTOR';\n\nexport const CHANGE_SHOW_LOADING = 'CHANGE_SHOW_LOADING';\n\nexport const HIDE_ALL = 'HIDE_ALL';\n\nexport const CHANGE_VOLUME = 'CHANGE_VOLUME';\n\n","import React, { Component } from 'react';\nimport './style.scss';\n\nexport default class Loading extends Component {\n  render () {\n    return (\n      <div className=\"base-loding\">\n        <div className=\"bouncing-loader\">\n          <div />\n          <div />\n          <div />\n        </div>\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getRecommendList } from '../../api';\nimport { formatPlayCount, imageRatio } from '../../common/js/utl';\nimport {\n  getChangeCurrentMusicListAction,\n  getChangeShowLoadingAction,\n  getMusicListDetailAction\n} from '../../store/actionCreator';\nimport Loding from '../../base/Loading';\nimport message from '../../base/Message';\n\nimport './style.scss';\n\nclass Recommend extends Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      recommendList: [],\n      gotRecommend: false,\n      showLoding: true\n    };\n  }\n\n  componentWillMount () {\n    // 获取推荐歌单\n    this.handleGetRecommendList();\n  }\n\n  handleGetRecommendList = (updateTime = null) => {\n    getRecommendList(updateTime).then(({ data }) => {\n      if (data.playlists && data.playlists.length === 0) {\n        message.info('已经到底啦~');\n        this.setState(() => ({\n          gotRecommend: false,\n          showLoding: false\n        }));\n        return;\n      }\n      this.setState((prevState) => ({\n        recommendList: prevState.recommendList.concat(data.playlists),\n        gotRecommend: false,\n        showLoding: false\n      }));\n    });\n  };\n\n  handleUserScroll = () => {\n    const recommendList = this.refs.recommendList;\n    const scrollAtBottom =\n      recommendList.scrollHeight -\n        (recommendList.scrollTop + recommendList.clientHeight) ===\n      0;\n    if (scrollAtBottom && !this.state.gotRecommend) {\n      this.setState(() => ({\n        gotRecommend: true,\n        showLoding: true\n      }), () => {\n        const index = this.state.recommendList.length - 1;\n        this.handleGetRecommendList(this.state.recommendList[index].updateTime);\n      });\n    }\n  };\n\n  // 歌单列表展示\n  renderRecommendList = () => {\n    return this.state.recommendList.map((item) => {\n      return (\n        <li key={item.id}>\n          <div\n            className=\"list-img-container\"\n            onClick={() => this.props.handleGetMusicListDetail(item.id)}\n          >\n            <i className=\"iconfont icon-play\" />\n            <img className=\"list-img\" src={item.coverImgUrl + imageRatio(153)} alt=\"\" />\n            <div className=\"played-counts\">\n              <i className=\"iconfont icon-erji\" />\n              <span>{formatPlayCount(item.playCount)}</span>\n            </div>\n            <div className=\"shadow\" />\n          </div>\n          <p className=\"list-name\">{item.name}</p>\n        </li>\n      );\n    });\n  };\n\n  render () {\n    return (\n      <div\n        className={[\n          'recommend-container',\n          this.props.showMusicList || this.props.showSingerInfo\n            ? 'hide-recommend-container'\n            : ''\n        ].join(' ')}\n      >\n        <ul\n          className=\"recommend-list\"\n          onScroll={this.handleUserScroll}\n          ref=\"recommendList\"\n        >\n          {this.renderRecommendList()}\n          {this.state.showLoding && <Loding />}\n        </ul>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    showMusicList: state.showMusicList,\n    showSingerInfo: state.showSingerInfo\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    handleChangeCurrentMusicList (list) {\n      const action = getChangeCurrentMusicListAction(list);\n      dispatch(action);\n    },\n    handleChangeShowLoadingAction (value) {\n      dispatch(getChangeShowLoadingAction(value));\n    },\n    handleGetMusicListDetail (id) {\n      dispatch(getMusicListDetailAction(id));\n    }\n  };\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Recommend)\n);\n","import axios from 'axios';\nimport {HOST} from '../common/js/config';\n\nexport const getHotSearch = () => {\n  const url = HOST + '/search/hot';\n  return axios.get(url);\n};\n\nexport const getSearchResult = (searchName, type) => {\n  const url = HOST + `/search?keywords=${searchName}&type=${type}&limit=80`;\n  return axios.get(url);\n};\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  getSingerInfoAction\n} from '../../store/actionCreator';\n\nclass RenderSingers extends Component {\n  renderSingers = () => {\n    return this.props.singers.map((item, index) => {\n      if (index !== this.props.singers.length - 1) {\n        return (\n          <span key={index}>\n            <span className=\"highlight\"\n              onClick={() => this.props.handleGetSingerInfo(item.id)}\n            >\n              {item.name}\n            </span>{' '}\n            /{' '}\n          </span>\n        );\n      } else {\n        return (\n          <span className=\"highlight\" key={index} onClick={() => this.props.handleGetSingerInfo(item.id)}>\n            {item.name}\n          </span>\n        );\n      }\n    });\n  };\n\n  render () {\n    return (\n      <Fragment>\n        {Array.isArray(this.props.singers) ? this.renderSingers() : ''}\n      </Fragment>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    handleGetSingerInfo (id) {\n      dispatch(getSingerInfoAction(id));\n    }\n  };\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps,\n)(RenderSingers);\n","/**\n * 歌曲列表展示组件 MusicList 组件使用\n *\n * 功能：\n *   1. 负责显示传入的所有歌曲\n *   2. 点击歌曲进行播放\n */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { If, Then, Else } from 'react-if';\nimport {\n  getChangeCurrentMusic,\n  getAlbumInfoAction,\n  getAddToLikeListAction\n} from '../../store/actionCreator';\nimport { findIndex } from '../../common/js/utl';\n\nimport RenderSingrs from '../RenderSingers';\n\nimport './style.scss';\n\nclass ShowList extends Component {\n  renderMusicList = () => {\n    return this.props.list.map((item, index) => {\n      let count = index + 1;\n      if (count < 10) {\n        count = '0' + count;\n      }\n      return (\n        <li key={item.id} className=\"list-li\">\n          <div className=\"count\">{count}</div>\n          <div className=\"music-name\">\n            <span\n              className=\"highlight\"\n              onClick={() => this.props.handleChangeCurrentMusic(item)}\n            >\n              {item.musicName}\n            </span>\n          </div>\n          <div className=\"singer-name\">\n            <RenderSingrs singers={item.singers} />\n          </div>\n          <div className=\"album-name\">\n            <span\n              className=\"highlight\"\n              onClick={() => this.props.handleGetAlbumInfo(item.album.id)}\n            >\n              {item.album.name}\n            </span>\n          </div>\n          <div className=\"control-btn\">\n            <If condition={findIndex(this.props.likesList, item) < 0}>\n              <Then>\n                <span\n                  className=\"like-music\"\n                  onClick={() => this.props.handleAddToLikeList(item)}\n                >\n                  <i\n                    className=\"iconfont icon-will-love\"\n                    title=\"添加到我喜欢的音乐\"\n                  />\n                </span>\n              </Then>\n              <Else>\n                <span\n                  className=\"dislike-music\"\n                  onClick={() => this.props.handleAddToLikeList(item)}\n                >\n                  <i className=\"iconfont icon-love\" title=\"不喜欢这首歌啦~\" />\n                </span>\n              </Else>\n            </If>\n          </div>\n        </li>\n      );\n    });\n  };\n\n  render () {\n    return (\n      <div className=\"show-list-container\">\n        <ul>\n          <If condition={this.props.showTitle}>\n            <li className=\"title\">\n              <div className=\"count\" />\n              <div className=\"music-name\">\n                <span>歌曲名</span>\n              </div>\n              <div className=\"singer-name\">\n                <span>歌手</span>\n              </div>\n              <div className=\"album-name\">\n                <span>专辑</span>\n              </div>\n            </li>\n          </If>\n          {this.renderMusicList()}\n        </ul>\n      </div>\n    );\n  }\n}\n\nShowList.defaultProps = {\n  showTitle: true\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    playList: state.playList,\n    likesList: state.collector ? state.collector.foundList[0].tracks : null\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    handleChangeCurrentMusic (item) {\n      dispatch(getChangeCurrentMusic(item));\n    },\n    handleGetAlbumInfo (albumId) {\n      dispatch(getAlbumInfoAction(albumId));\n    },\n    handleAddToLikeList (value) {\n      dispatch(getAddToLikeListAction(value));\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ShowList);\n\n/**\n * 点击歌曲：\n * 1. 获得当前的播放列表\n * 2. 通过 findIndex 查看列表中是否已经有点击的歌曲存在\n * 3. 如果已经有点击的歌曲存在，那就改变 currentIndex 以及 currentMusic 为已经存在的那首歌曲\n * 4. 如果没有，那就将被点击的歌曲插入到播放列表的最后一个，并播放\n */\n","import React, { Component } from 'react';\nimport { formatDate, imageRatio } from '../../common/js/utl';\nimport { connect } from 'react-redux';\nimport { If } from 'react-if';\nimport {\n  getAlbumInfoAction,\n  getSingerInfoAction,\n  getMusicListDetailAction\n} from '../../store/actionCreator';\nimport { getHotSearch, getSearchResult } from '../../api/search';\n\nimport ShowList from '../../base/ShowList';\nimport Loading from '../../base/Loading';\n\nimport './style.scss';\n\nconst SEARCH_TYPES = {\n  SONGS: 1,\n  ALBUMS: 10,\n  SINGERS: 100,\n  PLAYLIST: 1000\n};\nconst KEYBOARY_ENTER_CODE = 13;\n\nclass Search extends Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      hotSearch: null,\n      searchVal: '',\n      result: {\n        songs: null,\n        albums: null,\n        singers: null,\n        playlist: null\n      },\n      searchType: 'songs',\n      showLoading: false\n    };\n  }\n\n  componentDidMount () {\n    getHotSearch().then(({ data: { result: { hots } } }) => {\n      this.setState(() => ({\n        hotSearch: hots\n      }));\n    });\n  }\n\n  changeCurrentSearchType = (searchType) => {\n    if (searchType === this.state.searchType) {\n      return;\n    } else if (this.state.searchVal === '') {\n      this.setState(() => ({\n        searchType\n      }));\n      return;\n    }\n    this.setState(\n      () => ({\n        searchType\n      }),\n      () => {\n        this.handleGetType();\n      }\n    );\n  };\n\n  toggleShowLoading = () => {\n    this.setState((prevProps) => ({\n      showLoading: !prevProps.showLoading\n    }));\n  }\n\n  handleGetSongs = () => {\n    this.toggleShowLoading();\n    getSearchResult(this.state.searchVal, SEARCH_TYPES.SONGS).then(\n      ({\n        data: {\n          result: { songs }\n        }\n      }) => {\n        const r = JSON.parse(JSON.stringify(this.state.result));\n        r.songs = formatTracks(songs);\n        this.setState(() => ({\n          result: r\n        }));\n        this.toggleShowLoading();\n      }\n    ).catch(() => {\n      this.toggleShowLoading();\n    });\n  };\n\n  handleGetAlbums = () => {\n    this.toggleShowLoading();\n    getSearchResult(this.state.searchVal, SEARCH_TYPES.ALBUMS).then(\n      ({ data }) => {\n        const r = JSON.parse(JSON.stringify(this.state.result));\n        r.albums = data.result.albums;\n        this.setState(() => ({\n          result: r\n        }));\n        this.toggleShowLoading();\n      }\n    ).catch(() => {\n      this.toggleShowLoading();\n    });\n  };\n\n  handleGetSingers = () => {\n    this.toggleShowLoading();\n    getSearchResult(this.state.searchVal, SEARCH_TYPES.SINGERS).then(({ data }) => {\n      const r = JSON.parse(JSON.stringify(this.state.result));\n      r.singers = data.result.artists;\n      this.setState(() => ({\n        result: r\n      }));\n      this.toggleShowLoading();\n    }).catch(() => {\n      this.toggleShowLoading();\n    });\n  }\n\n  handleGetPlaylist = () => {\n    this.toggleShowLoading();\n    getSearchResult(this.state.searchVal, SEARCH_TYPES.PLAYLIST).then(({ data }) => {\n      const r = JSON.parse(JSON.stringify(this.state.result));\n      r.playlist = data.result.playlists;\n      this.setState(() => ({\n        result: r\n      }));\n      this.toggleShowLoading();\n    }).catch(() => {\n      this.toggleShowLoading();\n    });\n  }\n\n  handleKeydown = (e) => {\n    if (e.keyCode === KEYBOARY_ENTER_CODE) {\n      this.handleGetType();\n    }\n  };\n\n  handleGetType () {\n    this.setState(\n      () => ({\n        result: {\n          songs: null,\n          albums: null,\n          singers: null,\n          playlist: null\n        }\n      }),\n      () => {\n        switch (this.state.searchType) {\n        case 'songs':\n          this.handleGetSongs();\n          break;\n        case 'albums':\n          this.handleGetAlbums();\n          break;\n        case 'singers':\n          this.handleGetSingers();\n          break;\n        case 'playlist':\n          this.handleGetPlaylist();\n          break;\n        default:\n          break;\n        }\n      }\n    );\n  }\n\n  handleClickHotSearch = (val) => {\n    this.setState(\n      () => ({ searchVal: val }),\n      () => {\n        this.handleGetType();\n      }\n    );\n  };\n\n  renderHotSearch = () => {\n    const { hotSearch } = this.state;\n    if (!hotSearch) {\n      return null;\n    } else {\n      return hotSearch.map((item, index) => {\n        if (index === 0) {\n          return (\n            <span\n              onClick={() => this.handleClickHotSearch(item.first)}\n              key={item.first}\n              className=\"first-hot-search\"\n            >\n              {item.first}\n              <i>HOT</i>\n            </span>\n          );\n        } else {\n          return (\n            <span\n              onClick={() => this.handleClickHotSearch(item.first)}\n              key={item.first}\n            >\n              {item.first}\n            </span>\n          );\n        }\n      });\n    }\n  };\n\n  renderResult = () => {\n    switch (this.state.searchType) {\n    case 'songs':\n      return this.renderResultSongs();\n    case 'albums':\n      return this.renderResultAlbums();\n    case 'singers':\n      return this.renderResultSingers();\n    case 'playlist':\n      return this.renderResultPlayList();\n    default:\n      break;\n    }\n  };\n\n  renderResultSongs = () => {\n    if (!this.state.result.songs) {\n      return null;\n    } else {\n      return <ShowList showTitle={false} list={this.state.result.songs} />;\n    }\n  };\n\n  renderResultAlbums = () => {\n    if (!this.state.result.albums) {\n      return null;\n    } else {\n      return (\n        <ul className=\"result-albums\">\n          {this.state.result.albums.map((item) => {\n            return (\n              <li key={item.id}>\n                <div\n                  className=\"album-img\"\n                  onClick={() => this.props.handleGetAlbumInfo(item.id)}\n                >\n                  <img src={item.picUrl + imageRatio(60)} alt=\"专辑图片\" />\n                </div>\n                <p\n                  className=\"album-name\"\n                  onClick={() => this.props.handleGetAlbumInfo(item.id)}\n                >\n                  <span>{item.name}</span>\n                </p>\n                <p\n                  className=\"singer-name\"\n                  onClick={() => this.props.handleGetSingerInfo(item.artist.id)}\n                >\n                  <span>{item.artist.name}</span>\n                </p>\n                <div className=\"publish-time\">\n                  {formatDate(item.publishTime)}\n                </div>\n              </li>\n            );\n          })}\n        </ul>\n      );\n    }\n  };\n\n  renderResultSingers = () => {\n    if (!this.state.result.singers) {\n      return null;\n    } else {\n      return (\n        <ul className=\"result-singers\">\n          {this.state.result.singers.map((item) => {\n            return (\n              <li key={item.id} onClick={() => this.props.handleGetSingerInfo(item.id)}>\n                <div className=\"img-container\">\n                  <img src={item.img1v1Url + imageRatio(100)} alt=\"\"/>\n                </div>\n                <p className=\"name\">{item.name}</p>\n              </li>\n            );\n          })}\n        </ul>\n      );\n    }\n  }\n\n  renderResultPlayList = () => {\n    if (!this.state.result.playlist) {\n      return null;\n    } else {\n      return (\n        <ul className=\"result-playlist\">\n          {this.state.result.playlist.map((item) => {\n            return (\n              <li key={item.id} onClick={() => this.props.handleGetMusicListDetail(item.id)}>\n                <div className=\"img-container\">\n                  <img src={item.coverImgUrl + imageRatio(130)} alt=\"\"/>\n                </div>\n                <p className=\"count\">TRACKS: {item.trackCount}</p>\n                <p className=\"name\">{item.name}</p>\n              </li>\n            );\n          })}\n        </ul>\n      );\n    }\n  }\n\n  render () {\n    const { searchType } = this.state;\n    return (\n      <div\n        className={[\n          'page-search',\n          this.props.showMusicList || this.props.showSingerInfo\n            ? 'hide-page-search'\n            : ''\n        ].join(' ')}\n      >\n        <div className=\"search-container\">\n          <div className=\"search-input-container\">\n            <i className=\"iconfont icon-search\" />\n            <input\n              autoFocus={true}\n              value={this.state.searchVal}\n              placeholder=\"搜点什么想听的吧..\"\n              onChange={(e) => {\n                const val = e.target.value;\n                this.setState(() => ({ searchVal: val }));\n              }}\n              onKeyDown={(e) => {\n                this.handleKeydown(e);\n              }}\n            />\n          </div>\n          <div className=\"hot-search-container\">{this.renderHotSearch()}</div>\n          <div className=\"search-result\">\n            <nav>\n              <span\n                className={[\n                  'songs',\n                  searchType === 'songs' ? 'active' : ''\n                ].join(' ')}\n                onClick={() => this.changeCurrentSearchType('songs')}\n              >\n                歌曲\n              </span>\n              <span\n                className={[\n                  'albums',\n                  searchType === 'albums' ? 'active' : ''\n                ].join(' ')}\n                onClick={() => this.changeCurrentSearchType('albums')}\n              >\n                专辑\n              </span>\n              <span\n                className={[\n                  'singers',\n                  searchType === 'singers' ? 'active' : ''\n                ].join(' ')}\n                onClick={() => this.changeCurrentSearchType('singers')}\n              >\n                歌手\n              </span>\n              <span\n                className={[\n                  'playlist',\n                  searchType === 'playlist' ? 'active' : ''\n                ].join(' ')}\n                onClick={() => this.changeCurrentSearchType('playlist')}\n              >\n                歌单\n              </span>\n            </nav>\n            <div className=\"result\">{this.renderResult()}</div>\n          </div>\n          <If condition={this.state.showLoading}>\n            <div className=\"loading-container\">\n              <Loading />\n            </div>\n          </If>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    showMusicList: state.showMusicList,\n    showSingerInfo: state.showSingerInfo\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    handleGetSingerInfo (id) {\n      dispatch(getSingerInfoAction(id));\n    },\n    handleGetAlbumInfo (albumId) {\n      dispatch(getAlbumInfoAction(albumId));\n    },\n    handleGetMusicListDetail (id) {\n      dispatch(getMusicListDetailAction(id));\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Search);\n\nfunction formatTracks (list) {\n  return list.map((item) => {\n    const singers = item.artists.map((item) => {\n      return {\n        id: item.id,\n        name: item.name\n      };\n    });\n    return {\n      id: item.id,\n      musicName: item.name,\n      imgUrl: null,\n      singers,\n      album: {\n        id: item.album.id,\n        name: item.album.name\n      }\n    };\n  });\n}\n","import React, { Component } from 'react';\nimport './style.scss';\n\nexport default class Dialog extends Component {\n  render () {\n    return (\n      <div className=\"base-dialog\">\n        <div className=\"container\">\n          <p className=\"alert\">{this.props.text}</p>\n          <button className=\"btn-true\" onClick={() => this.props.handleClickBtn(true)}>\n            {this.props.trueBtnText}\n          </button>\n          <button className=\"btn-false\" onClick={() => this.props.handleClickBtn(false)}>\n            {this.props.falseBtnText}\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nDialog.defaultProps = {\n  trueBtnText: '确定',\n  falseBtnText: '取消'\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { If, Then, Else } from 'react-if';\nimport { formatPlayCount, imageRatio } from '../../common/js/utl';\nimport {\n  getChangePlayListAction,\n  getChangeCurrentIndex,\n  playNextMusicAction,\n  getToggleCollectPlaylist\n} from '../../store/actionCreator';\nimport './style.scss';\nimport ShowList from '../../base/ShowList';\nimport Dialog from '../../base/Dialog';\n\nconst COLLECT = 0,\n  FOUND = 1;\n\nclass Collect extends Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      currentList: this.props.collector\n        ? this.props.collector.foundList[0]\n        : null,\n      listType: FOUND,\n      activeList: 0,\n      showDialog: false,\n      willDelList: null\n    };\n  }\n\n  handleChangeCurrentList = (list, type) => {\n    // this.refs.pageCollect.scrollTo(0, 0);\n    this.setState(() => ({\n      currentList: list,\n      listType: type\n    }));\n  };\n\n  handleDelCollectPlaylist = (list) => {\n    this.setState(() => ({\n      showDialog: true,\n      willDelList: list\n    }));\n  };\n\n  handleClickDialog = (bol) => {\n    if (bol) {\n      this.props.handleToggleCollectPlaylist(this.state.willDelList);\n    }\n    this.setState(() => ({\n      showDialog: false\n    }));\n  };\n\n  renderCollectList = () => {\n    const collector = this.props.collector;\n    if (!collector) {\n      return null;\n    }\n    return collector.collectList.map((item, index) => {\n      return (\n        <li key={item.id}>\n          <i className=\"iconfont icon-yinleliebiao\" />\n          <span\n            onClick={() =>\n              this.handleChangeCurrentList(\n                collector.collectList[index],\n                COLLECT\n              )\n            }\n          >\n            {item.name}\n          </span>\n          <i\n            className=\"iconfont icon-del\"\n            onClick={() => this.handleDelCollectPlaylist(item)}\n          />\n        </li>\n      );\n    });\n  };\n\n  renderFoundList = () => {\n    const collector = this.props.collector;\n    if (!collector) {\n      return null;\n    }\n    return collector.foundList.map((item, index) => {\n      if (index === 0) {\n        return (\n          <li\n            key={item.name}\n            onClick={() =>\n              this.handleChangeCurrentList(collector.foundList[index], FOUND)\n            }\n          >\n            <i className=\"iconfont icon-will-love\" />\n            <span>{item.name}</span>\n          </li>\n        );\n      }\n      return (\n        <li\n          key={item.name}\n          onClick={() =>\n            this.handleChangeCurrentList(collector.foundList[index], FOUND)\n          }\n        >\n          <i className=\"iconfont icon-yinleliebiao\" />\n          <span>{item.name}</span>\n        </li>\n      );\n    });\n  };\n\n  renderFoundListImg = (tracks) => {\n    for (let i = 0; i < tracks.length; i++) {\n      if (tracks[i].imgUrl) {\n        return <img src={tracks[i].imgUrl + imageRatio(153)} alt=\"歌单图片\" />;\n      }\n    }\n  };\n\n  renderCurrentList = () => {\n    const list = this.state.currentList;\n    if (!list) {\n      return null;\n    }\n    return (\n      <div>\n        <div className=\"list-info\">\n          <div className=\"list-img\">\n            <If condition={this.state.listType === COLLECT}>\n              <Then>\n                <img src={list.coverImgUrl + imageRatio(153)} alt=\"歌单图片\" />\n              </Then>\n              <Else>\n                <div className=\"found-list\">\n                  <div className=\"filter\" />\n                  {this.renderFoundListImg(list.tracks)}\n                  <i className=\"iconfont icon-will-love\" />\n                </div>\n              </Else>\n            </If>\n          </div>\n          <div className=\"list-info-right\">\n            <h1 className=\"name\">{list.name}</h1>\n            <If\n              condition={\n                typeof list.description === 'string' &&\n                list.description.length > 0\n              }\n            >\n              <p className=\"desc\">简介：{list.description}</p>\n            </If>\n            <div className=\"count\">\n              <p className=\"track-count\">\n                歌曲数 <span>{list.tracks.length}</span>\n              </p>\n              <If condition={typeof list.playCount === 'number'}>\n                <p className=\"track-count\">\n                  收听数 <span>{formatPlayCount(list.playCount)}</span>\n                </p>\n              </If>\n            </div>\n            <button\n              className=\"play-btn\"\n              onClick={() => this.props.changeMusicList(list.tracks)}\n            >\n              <i className=\"iconfont icon-bofangicon\" />\n              <p>播放全部</p>\n            </button>\n          </div>\n        </div>\n        <div className=\"tracks-contianer\">\n          <ShowList\n            showLikeBtn={false}\n            showDislikeBtn={true}\n            list={list.tracks}\n          />\n        </div>\n      </div>\n    );\n  };\n\n  render () {\n    return (\n      <div\n        className={[\n          'page-collect',\n          this.props.showMusicList || this.props.showSingerInfo\n            ? 'hide-page-collect'\n            : ''\n        ].join(' ')}\n        ref=\"pageCollect\"\n      >\n        <div className=\"left-nav\">\n          <div className=\"nav-collect-found-list\">\n            <p className=\"title\">创建的歌单</p>\n            <ul>{this.renderFoundList()}</ul>\n          </div>\n          <div className=\"nav-collect-list-container\">\n            <p className=\"title\">收藏的歌单</p>\n            <ul>{this.renderCollectList()}</ul>\n          </div>\n        </div>\n        <div className=\"collect-container\">{this.renderCurrentList()}</div>\n        <If condition={this.state.showDialog}>\n          <Dialog\n            text=\"确定要删除此歌单吗？\"\n            handleClickBtn={this.handleClickDialog}\n          />\n        </If>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    collector: state.collector,\n    showMusicList: state.showMusicList,\n    showSingerInfo: state.showSingerInfo\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    changeMusicList (value) {\n      dispatch(getChangePlayListAction(value));\n      dispatch(getChangeCurrentIndex(-1));\n      dispatch(playNextMusicAction());\n    },\n    handleToggleCollectPlaylist (list) {\n      dispatch(getToggleCollectPlaylist(list));\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Collect);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { getAllRank } from '../../api';\nimport { formatDate, imageRatio } from '../../common/js/utl';\n\nimport { getMusicListDetailAction } from '../../store/actionCreator';\n\nimport './style.scss';\n\nclass Rank extends Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      rankList: null\n    };\n  }\n\n  componentDidMount () {\n    getAllRank().then((res) => {\n      this.setState(() => ({\n        rankList: res.data.list\n      }));\n    });\n  }\n\n  renderList = () => {\n    const list = this.state.rankList;\n    if (!list) {\n      return null;\n    } else {\n      return list.map((item) => {\n        return (\n          <li key={item.id} onClick={() => this.props.handleGetMusicListDetail(item.id)}>\n            <div className=\"img-container\">\n              <img src={item.coverImgUrl + imageRatio(130)} alt=\"\" />\n            </div>\n            <p className=\"name\">{item.name}</p>\n            <p className=\"update-frequency\">{item.updateFrequency}</p>\n            <p className=\"update-time\">\n              最后更新:{' '}\n              {formatDate(item.updateTime, {\n                y: false,\n                d: true,\n                m: true\n              })}\n            </p>\n          </li>\n        );\n      });\n    }\n  };\n\n  render () {\n    return (\n      <div\n        className={[\n          'page-rank',\n          this.props.showMusicList || this.props.showSingerInfo\n            ? 'hide-page-rank'\n            : ''\n        ].join(' ')}\n      >\n        <ul className=\"rank-container\">{this.renderList()}</ul>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    showMusicList: state.showMusicList,\n    showSingerInfo: state.showSingerInfo\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    handleGetMusicListDetail (id) {\n      dispatch(getMusicListDetailAction(id));\n    }};\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Rank);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport message from '../../base/Message';\nimport { getChangeCollectorAction } from '../../store/actionCreator';\nimport $db from '../../data';\n\nimport './style.scss';\n\n// const shell = window.require('electron').shell;\n// const fs = window.require('fs');\n// const { dialog } = window.require('electron').remote;\n\nclass Rank extends Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      rankList: null\n    };\n  }\n\n  handleOpenExternalUrl = (url) => {\n    // shell.openExternal(url);\n    window.open(url, '_blank');\n  };\n\n  // handleExportCollector = () => {\n  //   const filters = [\n  //     {\n  //       name: 'json',\n  //       extensions: ['json'] // 文件后缀名类型， 如 md json\n  //     }\n  //   ];\n  //   // https://electronjs.org/docs/api/dialog#dialogshowsavedialogbrowserwindow-options-callback\n  //   dialog.showSaveDialog(\n  //     {\n  //       filters,\n  //       defaultPath: 'here-music-collector'\n  //     },\n  //     (filename) => {\n  //       if (!filename) {\n  //         return;\n  //       }\n  //       // http://nodejs.cn/api/fs.html#fs_fs_writefile_file_data_options_callback\n  //       fs.writeFile(filename, JSON.stringify(this.props.collector), (err) => {\n  //         message.info('!Congratulation!   备份成功   !Congratulation!');\n  //         if (err) { throw err; }\n  //       });\n  //     }\n  //   );\n  // };\n\n  // handleImportCollector = () => {\n  //   // https://electronjs.org/docs/api/dialog#dialogshowopendialogbrowserwindow-options-callback\n  //   dialog.showOpenDialog(\n  //     {\n  //       properties: ['openFile']\n  //     },\n  //     (filename) => {\n  //       if (!filename || filename.length === 0) { return; }\n  //       fs.readFile(filename[0], (err, fd) => {\n  //         if (err) {\n  //           if (err.code === 'ENOENT') {\n  //             return;\n  //           }\n  //           throw err;\n  //         }\n  //         try {\n  //           const collector = JSON.parse(fd);\n  //           if (collector.name !== 'collector') {\n  //             message.info('!!请导入正确的备份文件!!');\n  //             return;\n  //           } else {\n  //             $db.update({ name: 'collector' }, collector, () => {\n  //               this.props.handleChangeCollector(collector);\n  //               message.info('!Congratulation!   导入成功   !Congratulation!');\n  //             });\n  //           }\n  //         } catch {\n  //           message.info('!!请导入正确的备份文件!!');\n  //         }\n  //       });\n  //     }\n  //   );\n  // };\n\n  // renderExportCollector () {\n  //   return (\n  //     <li className=\"export-collector\">\n  //       <h1 className=\"title\">导出我的收藏</h1>\n  //       <p className=\"description\">\n  //         因为重装软件会导致收藏夹数据丢失，所以强烈建议在重装软件前导出收藏夹进行备份。\n  //       </p>\n  //       <button onClick={this.handleExportCollector}>导出到本地文件</button>\n  //     </li>\n  //   );\n  // }\n  //\n  // renderImportCollector () {\n  //   return (\n  //     <li className=\"import-collector\">\n  //       <h1 className=\"title\">导入我的收藏夹</h1>\n  //       <p className=\"description\">\n  //         导入备份文件，恢复到我的收藏（会覆盖当前的收藏夹）。\n  //       </p>\n  //       <button onClick={this.handleImportCollector}>导入备份文件</button>\n  //     </li>\n  //   );\n  // }\n\n  renderAbout () {\n    return (\n      <li className=\"about\">\n        <h1 className=\"title\">关于 Here Music</h1>\n        <div className=\"description\">\n          <p className=\"here\">\n            Here Music :{' '}\n            <span\n              onClick={() =>\n                this.handleOpenExternalUrl('https://github.com/caijinyc/here')\n              }\n            >\n              https://github.com/caijinyc/here\n            </span>\n          </p>\n          <p>\n            因为软件暂时是个人开发维护，所以难免会有一些没有注意到的问题，请见谅。\n          </p>\n          <p>\n            如果对 Here Music 有任何建议，或者有 Bug 需要反馈的话欢迎在{' '}\n            <span\n              onClick={() =>\n                this.handleOpenExternalUrl(\n                  'https://github.com/caijinyc/here/issues'\n                )\n              }\n            >\n              Issues\n            </span>\n            中提出。\n          </p>\n          <p>如果您喜欢 Here Music 的话，欢迎 Star 和 Fork 本项目。</p>\n          <p className=\"license\">Version 0.1.1 本软件基于 MIT 协议开源</p>\n        </div>\n      </li>\n    );\n  }\n\n  render () {\n    return (\n      <div className=\"page-about\">\n        <ul className=\"page-about-container\">\n          {/* {this.renderExportCollector()}*/}\n          {/* {this.renderImportCollector()}*/}\n          {this.renderAbout()}\n        </ul>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    showMusicList: state.showMusicList,\n    showSingerInfo: state.showSingerInfo,\n    collector: state.collector\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    handleChangeCollector (value) {\n      dispatch(getChangeCollectorAction(value));\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Rank);\n","import React, { Component } from 'react';\nimport { NavLink, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport {\n  getHideMusicListAction,\n  getHideSingerInfoAction\n} from '../../store/actionCreator';\n\nimport './style.scss';\n\nclass Header extends Component {\n  isActive = (pathname) => {\n    if (this.props.location.pathname === pathname) {\n      return 'active';\n    } else {\n      return '';\n    }\n  }\n\n  render () {\n    return (\n      <header>\n        <nav>\n          <NavLink\n            exact\n            activeClassName={this.isActive('/')}\n            to=\"/\"\n            onClick={this.props.handleHideMusicListAndSingerInfo}\n          >\n            推荐\n          </NavLink>\n          <NavLink\n            activeClassName={this.isActive('/rank')}\n            to=\"/rank\"\n            onClick={this.props.handleHideMusicListAndSingerInfo}\n          >\n            排行榜\n          </NavLink>\n          <NavLink\n            activeClassName={this.isActive('/search')}\n            to=\"/search\"\n            onClick={this.props.handleHideMusicListAndSingerInfo}\n          >\n            搜索\n          </NavLink>\n          <NavLink\n            activeClassName={this.isActive('/collect')}\n            to=\"/collect\"\n            onClick={this.props.handleHideMusicListAndSingerInfo}\n          >\n            收藏\n          </NavLink>\n          {/* <NavLink\n            activeClassName={this.isActive('/about')}\n            to=\"/about\"\n            onClick={this.props.handleHideMusicListAndSingerInfo}\n          >\n            关于\n          </NavLink> */}\n        </nav>\n      </header>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    handleHideMusicListAndSingerInfo () {\n      dispatch(getHideMusicListAction());\n      dispatch(getHideSingerInfoAction());\n    }\n  };\n};\n\nexport default withRouter(\n  connect(\n    null,\n    mapDispatchToProps\n  )(Header)\n);\n","/**\n * 歌曲播放进度条 Player 组件使用\n * 支持：\n *  1. 拖动进度条跳转进度\n *  2. 点击进度条跳转进度\n *  3. 显示播放进度\n * @percent 接收歌曲播放进度并显示\n */\nimport React, { Component } from 'react';\n// import PropTypes from 'prop-types';\n\nimport './style.scss';\n\nclass ProgressBar extends Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      mouseDown: false,\n\n      // 进度条距离游览器左边的距离\n      // 作用：用来计算拖动的百分比\n      controlBarOffestLeft: null\n    };\n  }\n\n  componentDidMount () {\n    this.setState(() => ({\n      controlBarOffestLeft: offset(this.refs.controlBar, 'left')\n    }));\n    window.addEventListener('resize', this.handleWindowResize);\n  }\n\n  handleWindowResize = () => {\n    // 监听窗口大小变化，实时改变进度条距离游览器左边的距离\n    this.setState(() => ({\n      controlBarOffestLeft: offset(this.refs.controlBar, 'left')\n    }));\n  };\n\n  progressMouseDown = () => {\n    document.addEventListener('mousemove', this.progressMouseMove, false);\n    document.addEventListener('mouseup', this.progressMouseUp, false);\n  };\n\n  progressMouseMove = (e) => {\n    // 获得拖动后的百分比 = 拖动的距离（鼠标距离游览器左边的距离 - 进度条距离左边的距离 = 实际的距离） / 进度条的长度\n    let percent =\n      (e.clientX - this.state.controlBarOffestLeft) /\n      this.refs.controlBar.clientWidth;\n    // 因为拖动时会超过进度条的范围，所以需要给一个临界值 0 和 1\n    if (percent < 0) {\n      percent = 0;\n    } else if (percent > 1) {\n      percent = 1;\n    }\n\n    // 告诉父组件当前移动的百分比\n    this.props.percentChange(percent);\n  };\n\n  progressMouseUp = (e) => {\n    document.removeEventListener('mousemove', this.progressMouseMove, false);\n    document.removeEventListener('mouseup', this.progressMouseUp, false);\n\n    // 同样的方式，获得最后拖动后的百分比 = 拖动的距离 / 进度条的长度\n    let percent =\n      (e.clientX - this.state.controlBarOffestLeft) /\n      this.refs.controlBar.clientWidth;\n\n    if (percent < 0) {\n      percent = 0;\n    } else if (percent > 1) {\n      percent = 1;\n    }\n    this.props.percentChangeEnd(percent);\n  };\n\n  clickToChangePercent = (e) => {\n    let percent =\n      (e.clientX - this.state.controlBarOffestLeft) /\n      this.refs.controlBar.clientWidth;\n\n    if (percent < 0) {\n      percent = 0;\n    } else if (percent > 1) {\n      percent = 1;\n    }\n    this.props.percentChangeEnd(percent);\n  };\n\n  render () {\n    return (\n      <div className=\"progress-bar\" onClick={this.clickToChangePercent}>\n        <div className=\"add-click-scope\">\n          <div className=\"control-bar\" ref=\"controlBar\">\n            <div\n              className=\"elapsed-bar\"\n              style={{ width: this.props.percent * 100 + '%' }}\n            >\n              <span className=\"btn\" onMouseDown={this.progressMouseDown} />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ProgressBar;\n\n/**\n * https://blog.csdn.net/w390058785/article/details/80461845\n * 全面解析offsetLeft、offsetTop\n *\n * 作用：获取距离 body 的距离\n * @param {DOM} obj\n * @param {*} direction\n */\nfunction offset (obj, direction) {\n  // 将top,left首字母大写,并拼接成 offsetTop,offsetLeft\n  const offsetDir =\n    'offset' + direction[0].toUpperCase() + direction.substring(1);\n\n  let realNum = obj[offsetDir];\n  let positionParent = obj.offsetParent; // 获取上一级定位元素对象\n\n  while (positionParent != null) {\n    realNum += positionParent[offsetDir];\n    positionParent = positionParent.offsetParent;\n  }\n  return realNum;\n}\n","/**\n * 用来处理并显示歌曲播放时间\n * @currentTime 播放时间\n * @duration 歌曲时长\n */\nimport React, { Component } from 'react';\n\nimport './style.scss';\n\nclass PlayTime extends Component {\n  format (interval = 0) {\n    if (isNaN(interval)) {\n      interval = 0;\n    }\n    let minute = Math.floor(interval / 60);\n    if (minute < 10) {\n      minute = '0' + minute;\n    }\n    let second = Math.floor(interval % 60);\n    if (second < 10) {\n      second = '0' + second;\n    }\n    return minute + ':' + second;\n  }\n\n  render () {\n    return (\n      <div className=\"play-time\">\n        <span className=\"current-time\">\n          {this.format(this.props.currentTime)}\n        </span>\n        /<span className=\"duration\">{this.format(this.props.duration)}</span>\n      </div>\n    );\n  }\n}\n\nPlayTime.defaultProps = {\n  currentTime: 0,\n  duration: 0\n};\n\nexport default PlayTime;\n","/**\n * 播放列表：\n *  显示当前的播放列表\n * @param {Array} 使用 redux 中的 playlist 作为显示的数据\n * @param {Number} 使用 redux 中的 currentIndex 作为正在播放歌曲的索引\n * @param {Boolean} 接收传入的 hidePlayList\n */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { If, Then, Else } from 'react-if';\nimport {\n  getChangeCurrentMusic,\n  getDeleteMusicAction,\n  emptyPlayList\n} from '../../store/actionCreator';\nimport RenderSingrs from '../RenderSingers';\n\nimport './style.scss';\n\nclass PlayList extends Component {\n  getAlert () {\n    alert('getAlert from Child');\n  }\n\n  // scroll 滚动到当前播放的歌曲\n  scrollToCurrentMusic = () => {\n    if (this.props.playList.length === 0 || !this.refs.playListUl) {\n      return;\n    }\n    const distance = this.props.currentIndex * 51;\n    // this.refs.playListUl.scrollTo(0, distance);\n  };\n\n  /**\n   * 1. 点击歌曲需要播放歌曲\n   *    改变 currentIndex，以及 currentMusic 即可\n   * 2. 点击歌手名跳转到歌手列表\n   *    待定\n   */\n  renderPlayList = () => {\n    return this.props.playList.map((item, index) => {\n      return (\n        <li\n          key={item.id}\n          className={this.props.currentIndex === index ? 'action' : ''}\n          onDoubleClick={() => this.props.handleChangeCurrentMusic(item)}\n        >\n          <div className=\"music-name\">\n            <span onClick={() => this.props.handleChangeCurrentMusic(item)}>\n              {item.musicName}\n            </span>\n          </div>\n          <div className=\"singer-name\">\n            <RenderSingrs singers={item.singers}/>\n          </div>\n          <i\n            className=\"iconfont icon-del\"\n            onClick={() => this.props.handleDeleteMusic(item)}\n          />\n        </li>\n      );\n    });\n  };\n\n  render () {\n    const length = this.props.playList.length;\n    return (\n      <div\n        className=\"play-list\"\n        onClick={(e) => {\n          e.nativeEvent.stopImmediatePropagation();\n        }}\n      >\n        {/* e.nativeEvent.stopImmediatePropagation(); 阻止事件冒泡 */}\n        <div className=\"list-info\">\n          <span className=\"music-count\">共 {length} 首</span>\n          <span className=\"collect\" />\n          <span className=\"delete\" onClick={this.props.emptyPlayList}>\n            全部清空\n          </span>\n        </div>\n        <If condition={length === 0}>\n          <Then>\n            <div className=\"without-music\">你还没有添加歌曲</div>\n          </Then>\n          <Else>\n            <ul ref=\"playListUl\">{this.renderPlayList()}</ul>\n          </Else>\n        </If>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    playList: state.playList,\n    currentIndex: state.currentIndex\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    handleChangeCurrentMusic (item) {\n      const action = getChangeCurrentMusic(item);\n      dispatch(action);\n    },\n    handleDeleteMusic (item) {\n      const action = getDeleteMusicAction(item);\n      dispatch(action);\n    },\n    emptyPlayList () {\n      dispatch(emptyPlayList());\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  null,\n  { forwardRef: true }\n)(PlayList);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Lyric from 'lyric-parser';\nimport { If, Then, Else } from 'react-if';\nimport { toggleShowMusicDetail, getAlbumInfoAction } from '../../store/actionCreator';\nimport RenderSingrs from '../RenderSingers';\nimport { imageRatio } from '../../common/js/utl';\n\nimport './style.scss';\n\nclass MusicDetail extends Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      lyric: null,\n      noLyric: false,\n      currentLineNum: 0,\n      musicTime: 0\n    };\n  }\n\n  componentWillReceiveProps (nextProps) {\n    // 如果下一个 props 没有 currentMusic 就直接返回\n    if (!nextProps.currentMusicLyric) {\n      return;\n    }\n\n    // 歌词为 暂无歌词时 设置为暂无歌词 --> 返回\n    if (\n      'nolyric' in nextProps.currentMusicLyric ||\n      !('lrc' in nextProps.currentMusicLyric)\n    ) {\n      this.setState(() => ({\n        noLyric: true\n      }));\n      return;\n    }\n\n    // 当上一个props 的歌词和 这个 props 的歌词一样时，直接返回\n    const r =\n      JSON.stringify(nextProps.currentMusicLyric) ===\n      JSON.stringify(this.props.currentMusicLyric);\n    if (r) {\n      return;\n    }\n\n    // 这个时候歌词已经发生了变化\n    if (this.state.lyric !== null) {\n      // 如果之前已经有被处理过的歌词的话，先将原来的歌词暂停\n      this.state.lyric.stop();\n    }\n    // 初始化新的歌词，并进行替换\n    const lyric = new Lyric(\n      nextProps.currentMusicLyric.lrc.lyric,\n      this.handleLyric\n    );\n    this.setState(\n      () => ({\n        lyric,\n        noLyric: false\n      }),\n      () => {\n        // 初始化完成之后，播放当前歌词\n        this.state.lyric.play();\n        // this.refs.lyricList.scrollTo(0, 0);\n      }\n    );\n  }\n\n  displayMusicDetailGetMusicTime = (time) => {\n    this.setState(() => ({\n      musicTime: time\n    }), () => {\n      if (this.state.lyric) {\n        this.seek(this.state.musicTime);\n      };\n    });\n  }\n\n  togglePlay = () => {\n    this.state.lyric.togglePlay();\n  };\n\n  seek = (startTime) => {\n    this.state.lyric.seek(startTime * 1000);\n  };\n\n  renderLyric = () => {\n    if (!this.state.lyric) {\n      return;\n    }\n    return this.state.lyric.lines.map((item, index) => {\n      return (\n        <li\n          key={index}\n          className={[\n            this.state.currentLineNum === index ? 'highlight' : '',\n            'lyric-list'\n          ].join(' ')}\n        >\n          {item.txt}\n        </li>\n      );\n    });\n  };\n\n  handleLyric = ({ lineNum }) => {\n    if (this.state.noLyric) {\n      return;\n    }\n    this.setState(() => ({\n      currentLineNum: lineNum\n    }));\n    if (lineNum > 5) {\n      const parentDom = document.querySelector('.lyric-container');\n      // const distance = parentDom.scrollHeight - (parentDom.childNodes[lineNum].offsetTop - 72);\n      const distance =\n        parentDom.childNodes[lineNum].offsetTop -\n        72 -\n        (parentDom.childNodes[5].offsetTop - 72);\n      // this.refs.lyricList.scrollTo(0, distance);\n    } else {\n      // this.refs.lyricList.scrollTo(0, 0);\n    }\n  };\n\n  render () {\n    const { currentMusic, showMusicDetail } = this.props;\n    return (\n      <div className={showMusicDetail ? 'music-detail' : 'hide-music-detail'}>\n        <button\n          className=\"hide-music-detail-btn\"\n          onClick={this.props.handletoggleShowMusicDetail}\n        >\n          <i className=\"iconfont icon-cha\" />\n        </button>\n        <div className=\"detail-container\">\n          <div className=\"left-contanier\">\n            <div className=\"img\">\n              <img src={currentMusic.imgUrl + imageRatio(250)} alt=\"\" />\n            </div>\n          </div>\n          <div className=\"music-right-container\">\n            <div className=\"music-info\">\n              <p className=\"music-name\">{currentMusic.musicName}</p>\n              <p className=\"singer-name\" onClick={this.props.handletoggleShowMusicDetail}>\n                歌手：\n                <RenderSingrs singers={currentMusic.singers}/>\n              </p>\n              <p className=\"album-name\" onClick={() => this.props.handleGetAlbumInfo(currentMusic.album.id)}>专辑：{currentMusic.album.name}</p>\n            </div>\n            <div className=\"lyric\">\n              <If condition={!this.state.noLyric}>\n                <Then>\n                  <ul className=\"lyric-container\" ref=\"lyricList\">\n                    {this.renderLyric()}\n                  </ul>\n                </Then>\n                <Else>\n                  <p className=\"noLyric\">暂无歌词</p>\n                </Else>\n              </If>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    showMusicDetail: state.showMusicDetail,\n    currentMusic: state.currentMusic,\n    currentMusicLyric: state.currentMusicLyric\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    handletoggleShowMusicDetail () {\n      dispatch(toggleShowMusicDetail());\n    },\n    handleGetAlbumInfo (albumId) {\n      this.handletoggleShowMusicDetail();\n      dispatch(getAlbumInfoAction(albumId));\n    },\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  null,\n  { forwardRef: true }\n)(MusicDetail);\n","/**\n * Player 组件\n * 只负责歌曲的播放，以及控制歌曲的播放模式\n * 不用关心歌曲列表，以及歌曲的播放顺序的逻辑处理\n */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n// 使用 withRouter 之后就可以使用 this.props.history.push(value)\nimport { withRouter } from 'react-router-dom';\nimport { If, Then, Else } from 'react-if';\nimport {\n  getChangePlayingStatusAction,\n  playPrevMusicAction,\n  playNextMusicAction,\n  getChangePlayModeAction,\n  toggleShowMusicDetail,\n  getAddToLikeListAction,\n  getHideAllAction\n  // getChangeVolumeAction\n} from '../../store/actionCreator';\nimport { PLAY_MODE_TYPES } from '../../common/js/config';\nimport { findIndex, imageRatio } from '../../common/js/utl';\n\nimport ProgressBar from '../../base/ProgressBar';\nimport PlayTime from '../../base/PlayTime';\nimport PlayList from '../../base/PlayList';\nimport MusicDetail from '../../base/MusicDetail';\nimport RenderSingers from '../../base/RenderSingers';\n\nimport './style.scss';\n\n// const { ipcRenderer } = window.require('electron');\n\nconst DEFAULT_TIME = 0;\nconst PLAYING_STATUS = {\n  playing: true,\n  paused: false\n};\n// const VOLUME_UP = 'VOLUME_UP';\n// const VOLUME_DOWN = 'VOLUME_DOWN';\n\nclass Player extends Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      duration: DEFAULT_TIME,\n      currentTime: DEFAULT_TIME,\n      move: false,\n      percent: 0,\n      showPlayList: false\n    };\n  }\n\n  /* componentDidMount () {\n    this.refs.audio.volume = this.props.volume;\n\n    // 全局快捷键按键\n    // ipcRenderer.on('store-data', (event, store) => {\n    //   this.handleGlobalShortcut(store);\n    // });\n\n    // 快捷键\n    document.addEventListener('keydown', this.handleShortcut);\n  } */\n\n  handleGlobalShortcut = (e) => {\n    // if (e === 'volumeUp') {\n    //   this.handleChangeVolume(VOLUME_UP);\n    //   return;\n    // }\n    // if (e === 'volumeDown') {\n    //   this.handleChangeVolume(VOLUME_DOWN);\n    //   return;\n    // }\n    if (e === 'nextMusic') {\n      this.props.playNextMusic();\n      return;\n    }\n    if (e === 'prevMusic') {\n      this.props.playPrevMusic();\n      return;\n    }\n    if (e === 'changePlayingStatus') {\n      if (this.props.playing) {\n        this.handleChangePlayingStatus(PLAYING_STATUS.paused);\n      } else {\n        this.handleChangePlayingStatus(PLAYING_STATUS.playing);\n      }\n    }\n  }\n\n  handleShortcut = (e) => {\n    if (e.target.tagName === 'INPUT') {\n      return;\n    }\n    if (e.key === ' ') {\n      e.preventDefault();\n      if (this.props.playing) {\n        this.handleChangePlayingStatus(PLAYING_STATUS.paused);\n      } else {\n        this.handleChangePlayingStatus(PLAYING_STATUS.playing);\n      }\n      return;\n    }\n    // if (e.key === 'ArrowUp') {\n    //   e.preventDefault();\n    //   this.handleChangeVolume(VOLUME_UP);\n    //   return;\n    // }\n    // if (e.key === 'ArrowDown') {\n    //   e.preventDefault();\n    //   this.handleChangeVolume(VOLUME_DOWN);\n    //   return;\n    // }\n    if (e.key === 'ArrowRight' && e.metaKey) {\n      e.preventDefault();\n      this.props.playNextMusic();\n      return;\n    }\n    if (e.key === 'ArrowLeft' && e.metaKey) {\n      e.preventDefault();\n      this.props.playPrevMusic();\n      return;\n    }\n    if ((e.key === 'L' || e.key === 'l') && e.metaKey) {\n      this.props.handleAddToLikeList(this.props.currentMusic);\n      return;\n    }\n    if ((e.key === 'F' || e.key === 'f') && e.metaKey) {\n      this.props.handleHideAll();\n      this.props.history.push('/search');\n      return;\n    }\n  }\n\n  /* handleChangeVolume = (type) => {\n    if (type === VOLUME_UP) {\n      if (this.props.volume === 1) {\n        return;\n      } else {\n        const volume = this.props.volume + 0.05 > 1 ? 1 : this.props.volume + 0.05;\n        this.volumeChange(volume);\n      }\n    } else {\n      if (this.props.volume === 0) {\n        return;\n      } else {\n        const volume = this.props.volume - 0.05 < 0 ? 0 : this.props.volume - 0.05;\n        this.volumeChange(volume);\n      }\n    }\n  } */\n\n  componentWillReceiveProps ({ playing }) {\n    if (!playing) {\n      this.refs.audio.pause();\n    }\n  }\n\n  // 音乐播放触发 audio 标签的 updatetime 事件\n  // 这个时候获取 currentTime 得到音乐的时间\n  handleUpdateTime = (e) => {\n    if (this.state.move) {\n      return;\n    }\n    const { currentTime, duration } = e.target;\n    let percent = Math.floor((currentTime / duration) * 1000) / 1000;\n    if (isNaN(percent)) {\n      percent = 0;\n    }\n    this.setState(() => {\n      return {\n        currentTime,\n        percent,\n        duration\n      };\n    });\n  };\n\n  // 歌曲进度控制\n  percentChange = (percent) => {\n    if (this.props.showMusicDetail) {\n      const currentTime = this.state.duration * percent;\n      this.refs.musicDetail.seek(currentTime);\n    }\n    this.setState(() => {\n      return {\n        percent,\n        move: true\n      };\n    });\n  };\n\n  // 歌曲进度控制\n  percentChangeEnd = (percent) => {\n    const currentTime = this.state.duration * percent;\n    this.refs.audio.currentTime = currentTime;\n    if (this.props.showMusicDetail) {\n      this.refs.musicDetail.seek(currentTime);\n    }\n    this.setState(() => {\n      return {\n        currentTime,\n        percent,\n        move: false\n      };\n    });\n  };\n\n  // 音量控制\n  /* volumeChange = (percent) => {\n    this.refs.audio.volume = percent;\n    this.props.handleChangeVolume(percent);\n  }; */\n\n  handleChangePlayingStatus (status) {\n    if (this.props.playList.length === 0) {\n      return;\n    }\n    this.props.changePlayingStatus(status);\n    const audio = this.refs.audio;\n    if (status === PLAYING_STATUS.playing) {\n      audio.play();\n    } else {\n      audio.pause();\n    }\n    // 如果歌曲详情已经显示了，就对歌词进行暂停\n    if (this.props.showMusicDetail) {\n      this.refs.musicDetail.togglePlay();\n    }\n  }\n\n  handleShowPlayList = () => {\n    if (!this.state.showPlayList) {\n      document.addEventListener('click', this.handleShowPlayList);\n    } else {\n      document.removeEventListener('click', this.handleShowPlayList);\n    }\n    this.setState((pervState) => ({\n      showPlayList: !pervState.showPlayList\n    }), () => {\n      this.refs.playList.scrollToCurrentMusic();\n    });\n  };\n\n  handleShowMusicDetial = () => {\n    this.props.toggleShowMusicDetail();\n    this.refs.musicDetail.displayMusicDetailGetMusicTime(this.state.currentTime);\n  }\n\n  handlePlayNextMusic = () => {\n    if (this.props.playMode === PLAY_MODE_TYPES.LOOP_PLAY) {\n      const currentTime = 0;\n      this.refs.audio.currentTime = currentTime;\n      this.refs.audio.play();\n      this.setState(() => {\n        return {\n          currentTime\n        };\n      });\n    } else {\n      this.props.playNextMusic();\n    }\n  };\n\n  renderPlayerControl = () => {\n    return (\n      <div className=\"player-control-container\">\n        <div className=\"play-control-btn\">\n          <div className=\"prev-music\">\n            <i\n              className=\"iconfont icon-prev\"\n              onClick={this.props.playPrevMusic}\n            />\n          </div>\n          <div className=\"play\">\n            <If condition={this.props.playing}>\n              {/* 如果正在播放，显示暂停按钮 */}\n              <Then>\n                <i\n                  className=\"iconfont icon-stop\"\n                  onClick={() =>\n                    this.handleChangePlayingStatus(PLAYING_STATUS.paused)\n                  }\n                />\n              </Then>\n              {/* 如果音乐暂停，显示播放按钮 */}\n              <Else>\n                <i\n                  className=\"iconfont icon-bofangicon\"\n                  onClick={() =>\n                    this.handleChangePlayingStatus(PLAYING_STATUS.playing)\n                  }\n                />\n              </Else>\n            </If>\n          </div>\n          <div className=\"next-music\">\n            <i\n              className=\"iconfont icon-test\"\n              onClick={this.props.playNextMusic}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  render () {\n    const { currentMusic } = this.props;\n\n    return (\n      <div className=\"player-container\">\n        <div className=\"player-left-container\">\n          {this.renderPlayerControl()}\n          <div className=\"music-img\" onClick={this.handleShowMusicDetial}>\n            <img src={currentMusic ? currentMusic.imgUrl + imageRatio(64) : ''} alt=\"\" />\n          </div>\n        </div>\n        <div className=\"player-middle-container\">\n          <div className=\"music-info\">\n            <p className=\"music-name\" onClick={this.handleShowMusicDetial}>\n              {currentMusic ? currentMusic.musicName : ''}\n            </p>\n            <p className=\"singer-name\">\n              {currentMusic ? <RenderSingers singers={currentMusic.singers} /> : ''}\n            </p>\n          </div>\n          <div className=\"progress-bar-container\">\n            <ProgressBar\n              percent={this.state.percent}\n              percentChange={this.percentChange}\n              percentChangeEnd={this.percentChangeEnd}\n            />\n          </div>\n        </div>\n        <div className=\"player-right-container\">\n          <div className=\"play-time-container\">\n            <PlayTime\n              currentTime={this.state.currentTime}\n              duration={this.state.duration}\n            />\n          </div>\n          <div className=\"right-control-btn\">\n            <i\n              className=\"iconfont icon-list\"\n              onClick={this.handleShowPlayList}\n            />\n            <div className=\"change-play-mode\">\n              <i\n                className={[\n                  'iconfont icon-next',\n                  this.props.playMode === PLAY_MODE_TYPES.SEQUENCE_PLAY\n                    ? ''\n                    : 'hide'\n                ].join(' ')}\n                onClick={() =>\n                  this.props.changePlayMode(PLAY_MODE_TYPES.RANDOM_PLAY)\n                }\n              />\n              <i\n                className={[\n                  'iconfont icon-loop',\n                  this.props.playMode === PLAY_MODE_TYPES.LOOP_PLAY\n                    ? ''\n                    : 'hide'\n                ].join(' ')}\n                onClick={() =>\n                  this.props.changePlayMode(PLAY_MODE_TYPES.SEQUENCE_PLAY)\n                }\n              />\n              <i\n                className={[\n                  'iconfont icon-random',\n                  this.props.playMode === PLAY_MODE_TYPES.RANDOM_PLAY\n                    ? ''\n                    : 'hide'\n                ].join(' ')}\n                onClick={() =>\n                  this.props.changePlayMode(PLAY_MODE_TYPES.LOOP_PLAY)\n                }\n              />\n            </div>\n            <If condition={Boolean(this.props.likesList && findIndex(this.props.likesList, currentMusic) < 0)}>\n              <Then>\n                <div className=\"like-music\" onClick={() => this.props.handleAddToLikeList(currentMusic)}>\n                  <i className=\"iconfont icon-will-love\" title=\"添加到我喜欢的音乐\"></i>\n                </div>\n              </Then>\n              <Else>\n                <div className=\"dislike-music\" onClick={() => this.props.handleAddToLikeList(currentMusic)}>\n                  <i className=\"iconfont icon-love\" title=\"不喜欢这首歌啦~\"></i>\n                </div>\n              </Else>\n            </If>\n          </div>\n          {/* <div className=\"audio-volume\">\n            <i className=\"iconfont icon-volume-up\" />\n            <ProgressBar\n              percent={this.props.volume}\n              percentChange={this.volumeChange}\n              percentChangeEnd={this.volumeChange}\n            />\n          </div> */}\n        </div>\n        <If condition={this.props.showMusicDetail}>\n          <div>\n            <div className=\"music-detail-background\">\n              <img src={currentMusic ? currentMusic.imgUrl + imageRatio(250) : ''} alt=\"\" />\n            </div>\n            <div className=\"player-background\"></div>\n          </div>\n        </If>\n        <MusicDetail ref=\"musicDetail\" />\n        <div\n          className={`${\n            this.state.showPlayList ? '' : 'hide-play-list'\n          } play-list-container`}\n        >\n          <PlayList ref=\"playList\" showPlayList={this.state.showPlayList}/>\n        </div>\n        <audio\n          autoPlay\n          src={currentMusic ? currentMusic.musicUrl : ''}\n          ref=\"audio\"\n          onTimeUpdate={this.handleUpdateTime}\n          onEnded={this.handlePlayNextMusic}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    playList: state.playList,\n    currentMusic: state.currentMusic,\n    playing: state.playing,\n    // volume: state.volume,\n    playMode: state.playMode,\n    showMusicDetail: state.showMusicDetail,\n    likesList: state.collector ? state.collector.foundList[0].tracks : null\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    changePlayingStatus (status) {\n      dispatch(getChangePlayingStatusAction(status));\n    },\n    changePlayMode (value) {\n      dispatch(getChangePlayModeAction(value));\n    },\n    playPrevMusic () {\n      dispatch(playPrevMusicAction());\n    },\n    playNextMusic () {\n      dispatch(playNextMusicAction());\n    },\n    toggleShowMusicDetail () {\n      dispatch(toggleShowMusicDetail());\n    },\n    handleAddToLikeList (value) {\n      dispatch(getAddToLikeListAction(value));\n    },\n    /**\n     * 隐藏 *歌手详情* *歌曲列表* *歌曲详情*\n     */\n    handleHideAll () {\n      dispatch(getHideAllAction());\n    }\n    // handleChangeVolume (value) {\n    //   dispatch(getChangeVolumeAction(value));\n    // }\n  };\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Player)\n);\n\n\n/**\n * 点击歌曲播放逻辑：\n * 1. 点击歌曲的时候使用 getChangeCurrentMusic\n * 2. 使用 redux-thunk 中间件，在 actoin 中发出获取歌曲 url 的请求\n * 3. 获取 url 之后在 action 中直接调用 actionCreator 中的 changeCurrentMusicAction 来对 redux 中的 currentMusic 进行修改\n *\n * 点击下一首：\n * 1. 修改 currentIndex 也就是前播放列表 playList 中的歌曲索引\n *    1.\n * 2. 更改 redux 中的 currentMusic 修改为 playList[currentIndex]\n * 3. 重复 播放逻辑\n *\n * 播放完当前歌曲下一首：\n */\n","/**\n * 歌曲展示组件，\n * 用于显示歌曲列表中的所有歌曲\n */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  getChangePlayListAction,\n  getChangeCurrentIndex,\n  playNextMusicAction,\n  getToggleCollectPlaylist\n} from '../../store/actionCreator';\nimport { If } from 'react-if';\nimport { formatDate, findIndex, imageRatio } from '../../common/js/utl';\n\nimport ShowList from '../../base/ShowList';\n\nimport './style.scss';\n\nclass MusicList extends Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      scrollToTop: false\n    };\n  }\n\n  componentWillReceiveProps (nextProps) {\n    if (!this.props.musicList) {\n      return;\n    }\n    // 当 musicList 发生改变的时候，滚动条置于最上层\n    if (nextProps.musicList.id !== this.props.musicList.id) {\n      this.setState(() => ({\n        scrollToTop: true\n      }));\n    }\n  }\n\n  componentDidUpdate () {\n    if (this.state.scrollToTop) {\n      // this.refs.musicList.scrollTo(0, 0);\n      this.setState(() => ({\n        scrollToTop: false\n      }));\n    }\n  }\n\n  handleCollectList = () => {\n    const musicList = this.props.musicList;\n\n    // 处理一下需要存储的数据\n    const list = {\n      tracks: musicList.tracks,\n      name: musicList.name,\n      id: musicList.id,\n      coverImgUrl: musicList.coverImgUrl,\n      tags: musicList.tags,\n      updateTime: musicList.updateTime,\n      playCount: musicList.playCount,\n      description: musicList.description,\n      artist: musicList.artist ? musicList.artist : null,\n      publishTime: musicList.publishTime ? musicList.publishTime : null\n    };\n\n    this.props.handleToggleCollectPlaylist(list);\n  };\n\n  renderListInfo () {\n    const musicList = this.props.musicList;\n    if (!musicList) {\n      return null;\n    }\n\n    // 当简介的 length 超过 200 的时候扔掉多余的，在结尾加上 ...\n    let description = musicList.description;\n    if (description.length > 200) {\n      description = description.substring(0, 180) + ' ...';\n    }\n\n    return (\n      <div className=\"list-info\">\n        <div className=\"list-img\">\n          <img src={musicList.coverImgUrl + imageRatio(200)} alt=\"\" />\n        </div>\n        <p className=\"name\">{musicList.name}</p>\n        <If condition={musicList.type === '专辑'}>\n          <div className=\"album-info\">\n            <p className=\"artist\">\n              {musicList.artist\n                ? musicList.artist.name\n                  ? musicList.artist.name\n                  : ''\n                : ''}\n            </p>\n            <If condition={typeof musicList.publishTime === 'number'}>\n              <p className=\"publish-time\">\n                {formatDate(musicList.publishTime)}\n              </p>\n            </If>\n            <If\n              condition={\n                typeof musicList.company === 'string' &&\n                musicList.company.length > 0\n              }\n            >\n              <p className=\"company\">发行：{musicList.company}</p>\n            </If>\n          </div>\n        </If>\n        <p className=\"description\">{description}</p>\n        <div className=\"control\">\n          <i\n            className=\"iconfont icon-play1\"\n            onClick={() =>\n              this.props.changeMusicList(this.props.musicList.tracks)\n            }\n          />\n          <i\n            className={['iconfont', 'icon-folder', findIndex(this.props.collectedPlaylist, musicList) < 0 ? '' : 'collected'].join(' ')}\n            onClick={this.handleCollectList}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  render () {\n    const musicList = this.props.musicList;\n    return (\n      <div\n        className={\n          this.props.showMusicList && !this.props.showSingerInfo\n            ? 'music-list-container'\n            : 'hide-music-list-container'\n        }\n        ref=\"musicList\"\n      >\n        {this.renderListInfo()}\n        <ShowList\n          className=\"show-list-container\"\n          list={musicList ? musicList.tracks : []}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    musicList: state.musicList,\n    showMusicList: state.showMusicList,\n    showSingerInfo: state.showSingerInfo,\n    collectedPlaylist: state.collector ? state.collector.collectList : null\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    changeMusicList (value) {\n      dispatch(getChangePlayListAction(value));\n      dispatch(getChangeCurrentIndex(-1));\n      dispatch(playNextMusicAction());\n    },\n    handleToggleCollectPlaylist (list) {\n      dispatch(getToggleCollectPlaylist(list));\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MusicList);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { If } from 'react-if';\nimport {\n  getChangeCurrentMusic,\n  getChangePlayListAction,\n  getChangeCurrentIndex,\n  playNextMusicAction,\n  getHideSingerInfoAction,\n  getAlbumInfoAction\n} from '../../store/actionCreator';\nimport { getSingerAlbums } from '../../api';\nimport { formatDate, imageRatio } from '../../common/js/utl';\nimport ShowList from '../../base/ShowList';\n\nimport './style.scss';\n\nclass SingerInfo extends Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      gotSingerAlbums: false,\n      albums: null\n    };\n  }\n\n  componentWillReceiveProps (nextProps) {\n    if (!nextProps.singerInfo) {\n      this.setState(() => ({\n        gotSingerAlbums: false,\n        albums: null\n      }));\n    }\n  }\n\n  componentDidUpdate () {\n    const singerInfo = this.refs.singerInfo;\n    if (singerInfo) {\n      // 如果发现内容高度不足以让用户滚动，那么就直接获取专辑内容\n      if (singerInfo.scrollHeight === singerInfo.clientHeight && !this.state.albums) {\n        getSingerAlbums(this.props.singerInfo.artist.id).then((res) => {\n          this.setState(() => ({\n            albums: res.data\n          }));\n        });\n      }\n    }\n  }\n\n  handleUserScroll = () => {\n    const singerInfo = this.refs.singerInfo;\n    const scrollAtBottom = singerInfo.scrollHeight - (singerInfo.scrollTop + singerInfo.clientHeight) < 100;\n    if (scrollAtBottom && !this.state.gotSingerAlbums && !this.state.albums) {\n      this.setState(() => ({\n        gotSingerAlbums: true\n      }), () => {\n        getSingerAlbums(this.props.singerInfo.artist.id).then((res) => {\n          this.setState(() => ({\n            albums: res.data\n          }));\n        });\n      });\n    }\n  }\n\n  renderAlbums = () => {\n    const albums = this.state.albums;\n    if (!albums) {\n      return null;\n    }\n\n    return albums.hotAlbums.map((item) => {\n      return (\n        <li key={item.id}>\n          <div className=\"album-img-container\" onClick={() => this.props.handleGetAlbumInfo(item.id)}>\n            <img src={item.picUrl + imageRatio(100)} alt=\"专辑图像\"/>\n          </div>\n          <p className=\"time\">{formatDate(item.publishTime)}</p>\n          <p className=\"name\">{item.name}</p>\n        </li>\n      );\n    });\n  }\n\n  render () {\n    if (this.props.singerInfo === null) {\n      return null;\n    }\n    const { singerInfo, showSingerInfo } = this.props;\n    const tracks = formatMusic(this.props.singerInfo.hotSongs);\n    const { artist } = singerInfo;\n    return (\n      <div\n        className={showSingerInfo ? 'singer-info' : 'hide-singer-info'}\n        ref=\"singerInfo\"\n        onScroll={this.handleUserScroll}\n      >\n        <span\n          className=\"hide-singer-info-btn\"\n          onClick={this.props.hideSingerInfo}\n        >\n          <i className=\"iconfont icon-cha\" />\n        </span>\n        <div className=\"singer-info-container\">\n          <div className=\"singer-introduction\">\n            <div className=\"singer-img\">\n              <img src={artist.img1v1Url + imageRatio(150)} alt=\"\" />\n            </div>\n            <div className=\"singer-describe\">\n              <h1 className=\"name\">{artist.name}</h1>\n              <p className=\"other-name\">\n                {(artist.trans ? artist.trans : '') +\n                  (artist.alias.length > 0 && artist.trans ? ' / ' : '') +\n                  artist.alias.join(' / ')}\n              </p>\n              <p className=\"brief-desc\">\n                简介：{artist.briefDesc ? artist.briefDesc : '暂无简介'}\n              </p>\n            </div>\n          </div>\n          <article className=\"singer-music\">\n            <section className=\"songs-list\">\n              <h1 className=\"songs-list-title\">\n                热门歌曲\n                <span\n                  className=\"btn\"\n                  onClick={() =>\n                    this.props.changeMusicList(tracks)\n                  }\n                >\n                  播放歌曲\n                  <i className=\"iconfont icon-play1\" />\n                </span>\n              </h1>\n              <ShowList list={tracks}/>\n            </section>\n            <If condition={this.state.albums !== null}>\n              <section className=\"albums-list\">\n                <h1 className=\"albums-list-title\">专辑\n                  <span>{this.state.albums ? this.state.albums.hotAlbums.length + ' ALBUMS' : ''} </span>\n                </h1>\n                <ul>\n                  {this.renderAlbums()}\n                </ul>\n              </section>\n            </If>\n          </article>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    singerInfo: state.singerInfo,\n    showSingerInfo: state.showSingerInfo\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    handleChangeCurrentMusic (item) {\n      dispatch(getChangeCurrentMusic(item));\n    },\n    changeMusicList (value) {\n      dispatch(getChangePlayListAction(value));\n      dispatch(getChangeCurrentIndex(-1));\n      dispatch(playNextMusicAction());\n    },\n    hideSingerInfo () {\n      dispatch(getHideSingerInfoAction(false));\n    },\n    handleGetAlbumInfo (albumId) {\n      dispatch(getAlbumInfoAction(albumId));\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SingerInfo);\n\nfunction formatMusic (list) {\n  return list.map((item) => {\n    const singers = item.ar.map((item) => {\n      return {\n        id: item.id,\n        name: item.name\n      };\n    });\n    return {\n      id: item.id,\n      musicName: item.name,\n      imgUrl: item.al.picUrl,\n      singers,\n      album: {\n        id: item.al.id,\n        name: item.al.name\n      }\n    };\n  });\n};\n","import React, { Component } from 'react';\n\n// import TitleBtn from '../TitleBtn';\n\nimport './style.scss';\n\n// const { remote } = window.require('electron');\n// const currentWindow = remote.getCurrentWindow();\n\nclass MyTitle extends Component {\n  render () {\n    return (\n      // <div className=\"my-title\" onDoubleClick={() => currentWindow.minimize()}>\n      <div className=\"my-title\" >\n        <div className=\"title-btn-container\">\n          {/* <TitleBtn type=\"close\" />\n         <TitleBtn type=\"min\" />\n         <TitleBtn type=\"max\" /> */}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MyTitle;\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport {\n  getChangeCollectorAction,\n  getLoadCacheAction\n} from './store/actionCreator';\nimport $db from './data';\n\nimport Recommend from './pages/Recommend';\nimport Search from './pages/Search';\nimport Collect from './pages/Collect';\nimport Rank from './pages/Rank';\nimport About from './pages/About';\n\nimport Header from './components/Header';\nimport Player from './components/Player';\nimport MusicList from './components/MusicList';\nimport SingerInfo from './components/SingerInfo';\n\nimport Loading from './base/Loading';\n\nimport MyTitle from './renderer/components/MyTitle';\n\nimport './App.scss';\n\nclass App extends Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      redirect: true\n    };\n  }\n\n  componentWillMount () {\n    // 初始化收藏夹\n    $db.find({ name: 'collector' }, (err, res) => {\n      if (res.length === 0) {\n        $db.insert(\n          {\n            name: 'collector',\n            foundList: [\n              {\n                name: '我喜欢的音乐',\n                tracks: []\n              }\n            ],\n            collectList: []\n          },\n          (err, res) => {\n            this.props.handleChangeCollector(res[0]);\n          }\n        );\n      } else {\n        this.props.handleChangeCollector(res[0]);\n      }\n    });\n    // 初始化使用信息\n    $db.find({ name: 'cache'}, (err, res) => {\n      if (res.length === 0) {\n        $db.insert(\n          {\n            name: 'cache',\n            cacheValue: {\n              playList: [],\n              currentIndex: -1,\n              volume: 0.35\n            }\n          }\n        );\n      } else {\n        this.props.handleLoadCache(res[0].cacheValue);\n      }\n    });\n  }\n\n  componentDidMount () {\n    this.setState(() => ({\n      redirect: false\n    }));\n  }\n\n  render () {\n    return (\n      <Router>\n        <div className=\"App\">\n          <Header />\n          <MusicList />\n          <Player />\n          <SingerInfo />\n          <div className=\"app-background\" />\n          {/* exact 路径完全相等的时候才显示路由内的内容 */}\n          <Route exact path=\"/\" component={Recommend} />\n          <Route path=\"/search\" component={Search} />\n          <Route path=\"/collect\" component={Collect} />\n          <Route path=\"/rank\" component={Rank} />\n          <Route path=\"/about\" component={About} />\n          { this.state.redirect ? <Redirect to=\"/\" /> : null}\n          <MyTitle />\n          {this.props.showLoading ? (\n            <div className=\"app-loading-container\">\n              <Loading />\n            </div>\n          ) : null}\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    showLoading: state.showLoading\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    handleChangeCollector (value) {\n      dispatch(getChangeCollectorAction(value));\n    },\n    handleLoadCache (value) {\n      dispatch(getLoadCacheAction(value));\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","import * as types from './actionTypes';\nimport $db from '../data';\n\nimport { PLAY_MODE_TYPES } from '../common/js/config';\n\nconst DEFAULT_VOLUME = 1;\n\n// 给一个初始的 state\nconst defaultState = {\n  // 当前展示的歌单列表\n  musicList: null,\n\n  // 控制歌单列表的显示\n  showMusicList: false,\n\n  // 控制歌曲详情的显示\n  showMusicDetail: false,\n\n  // 控制歌手详情的显示\n  showSingerInfo: false,\n\n  // 歌手详情\n  singerInfo: null,\n\n  // 当前播放的歌曲\n  currentMusic: {\n    id: 167882,\n    musicName: '清明雨上',\n    musicUrl: '',\n    imgUrl:\n      'https://p1.music.126.net/6y-UleORITEDbvrOLV0Q8A==/5639395138885805.jpg',\n    singers: [{\n      id: 5771,\n      name: '许嵩'\n    }],\n    album: {\n      id: 16953,\n      name: '自定义'\n    }\n  },\n\n  currentMusicLyric: null,\n\n  // 播放状态\n  playing: false,\n\n  // 播放列表\n  playList: [],\n\n  // 当前播放索引\n  currentIndex: 0,\n\n  // 播放模式\n  playMode: PLAY_MODE_TYPES.SEQUENCE_PLAY,\n\n  // 收藏\n  collector: null,\n\n  // 显示全局的 Loding\n  showLoading: false,\n\n  // 音量\n  volume: DEFAULT_VOLUME\n};\n\n// state 里面存放了所有的数据\n// reducer 可以接收 state，但是绝对不可以修改 state\nexport default (state = defaultState, action) => {\n  if (action.type === types.CHANGE_CURRENT_MUSIC_LIST) {\n    const newState = deepCopy(state);\n    newState.musicList = action.value;\n    if (action.value) {\n      newState.showMusicList = true;\n    }\n    return newState;\n  }\n  if (action.type === types.HIDE_MUSIC_LIST) {\n    const newState = deepCopy(state);\n    newState.showMusicList = false;\n    return newState;\n  }\n  if (action.type === types.CHANGE_CURRENT_MUSIC) {\n    const newState = deepCopy(state);\n    newState.currentMusic = action.value;\n    newState.playing = true;\n    return newState;\n  }\n  if (action.type === types.CHANGE_PLAYING_STATUS) {\n    const newState = deepCopy(state);\n    newState.playing = action.status;\n    return newState;\n  }\n  if (action.type === types.CHANGE_PLAY_LIST) {\n    const newState = deepCopy(state);\n    newState.playList = action.value;\n    cacheLastUseInfo({ playList: action.value });\n    return newState;\n  }\n  if (action.type === types.CHANGE_CURRENT_INDEX) {\n    const newState = deepCopy(state);\n    newState.currentIndex = action.index;\n    cacheLastUseInfo({ currentIndex: action.index, playList: newState.playList });\n    return newState;\n  }\n  if (action.type === types.CHANGE_PLAY_MODE) {\n    const newState = deepCopy(state);\n    newState.playMode = action.value;\n    return newState;\n  }\n  if (action.type === types.TOGGLE_SHOW_MUSIC_DETAIL) {\n    const newState = deepCopy(state);\n    newState.showMusicDetail = !newState.showMusicDetail;\n    return newState;\n  }\n  if (action.type === types.CHANGE_CURRENT_MUSIC_LYRIC) {\n    const newState = deepCopy(state);\n    newState.currentMusicLyric = action.value;\n    return newState;\n  }\n  if (action.type === types.CHANGE_SINGER_INFO) {\n    const newState = deepCopy(state);\n    newState.singerInfo = action.value;\n    newState.showSingerInfo = true;\n    return newState;\n  }\n  if (action.type === types.HIDE_SINGER_INFO) {\n    const newState = deepCopy(state);\n    newState.showSingerInfo = false;\n    return newState;\n  }\n  if (action.type === types.CHANGE_COLLECTOR) {\n    const newState = deepCopy(state);\n    newState.collector = action.value;\n    return newState;\n  }\n  if (action.type === types.REFRESH_COLLECTOR) {\n    const newState = deepCopy(state);\n    newState.collector = getNewCollector();\n    return newState;\n  }\n  if (action.type === types.CHANGE_SHOW_LOADING) {\n    const newState = deepCopy(state);\n    newState.showLoading = action.value;\n    return newState;\n  }\n  if (action.type === types.HIDE_ALL) {\n    const newState = deepCopy(state);\n    newState.showMusicList = false;\n    newState.showSingerInfo = false;\n    newState.showMusicDetail = false;\n    return newState;\n  }\n  if (action.type === types.CHANGE_VOLUME) {\n    const newState = deepCopy(state);\n    newState.volume = action.value;\n    cacheLastUseInfo({ volume: action.value });\n    return newState;\n  }\n  return state;\n};\n\nfunction deepCopy (val) {\n  return JSON.parse(JSON.stringify(val));\n}\n\nfunction getNewCollector () {\n  let newCollector = null;\n  $db.find({ name: 'collector' }, function (err, res) {\n    newCollector = res[0];\n  });\n  return newCollector;\n}\n\nfunction cacheLastUseInfo (obj = {}) {\n  let cache = null, needUpdate = false;\n  $db.find({ name: 'cache' }, (err, res) => {\n    cache = res[0];\n    if (obj.volume !== undefined) {\n      cache.cacheValue.volume = obj.volume;\n      needUpdate = true;\n    }\n    if (obj.playList && JSON.stringify(obj.playList) !== JSON.stringify(cache.cacheValue.playList)) {\n      cache.cacheValue.playList = obj.playList;\n      needUpdate = true;\n    }\n    if (obj.currentIndex !== undefined && obj.currentIndex !== cache.cacheValue.currentIndex) {\n      cache.cacheValue.currentIndex = obj.currentIndex;\n      needUpdate = true;\n    }\n    if (needUpdate) {\n      $db.update({ name: 'cache' }, cache);\n    }\n  });\n}\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport reducer from './reducer';\nimport thunk from 'redux-thunk';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\n\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n","import Datastore from 'nedb';\nimport path from 'path';\n// const remote = window.require('electron').remote;\n\nexport default new Datastore({\n  filename: path.join(__dirname, '/data.db'),\n  autoload: true\n});\n"],"sourceRoot":""}